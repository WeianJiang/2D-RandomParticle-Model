# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0, 0), point2=(
    150, 150))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    59.476569400776363, 23.583579248206139), point1=(66.851665276939386, 
    23.583579248206139))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    14.713685435958773, 75.99897225747749), point1=(22.57948328848537, 
    75.99897225747749))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    28.051608057131045, 139.34084391983549), point1=(34.079662120056113, 
    139.34084391983549))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    138.76753472154326, 47.302006617211426), point1=(145.8276402946365, 
    47.302006617211426))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    108.27864694743408, 128.82319642640508), point1=(114.87113912374971, 
    128.82319642640508))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    47.218569253778895, 66.744066924216668), point1=(53.038948549314952, 
    66.744066924216668))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    89.680106426207772, 116.93631084022527), point1=(97.047148546542857, 
    116.93631084022527))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    136.32346198712818, 31.382301685686155), point1=(143.86917626735641, 
    31.382301685686155))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    123.37375136530329, 95.545737683261478), point1=(128.57654977907237, 
    95.545737683261478))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    105.3200522706847, 6.6636466709621978), point1=(111.85925794084898, 
    6.6636466709621978))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    134.2016936198826, 126.97726324793315), point1=(139.58023795634162, 
    126.97726324793315))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    49.382012947322799, 124.59220018878297), point1=(57.112847014233537, 
    124.59220018878297))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    112.34031382986628, 113.77396925787727), point1=(118.68859238107905, 
    113.77396925787727))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    29.202550662565656, 51.897436884511777), point1=(36.634156809297458, 
    51.897436884511777))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    98.797148203270851, 102.18263368215464), point1=(104.80650211055647, 
    102.18263368215464))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    133.01602750034391, 14.857326802917104), point1=(139.39686904375313, 
    14.857326802917104))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    118.40859964671645, 13.765294595814808), point1=(125.95477468244042, 
    13.765294595814808))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    52.594705708469924, 94.246947067520892), point1=(57.91942632208351, 
    94.246947067520892))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    36.45058278144375, 90.598520549206668), point1=(42.849720167957557, 
    90.598520549206668))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    76.833832452240955, 21.206542197091693), point1=(83.953986189028299, 
    21.206542197091693))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    43.942853054222617, 54.32985530439948), point1=(50.90389439847818, 
    54.32985530439948))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    63.839444247769947, 134.15824167065927), point1=(69.070826744872278, 
    134.15824167065927))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    143.63573737131702, 133.21904605611775), point1=(148.7861427071538, 
    133.21904605611775))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    90.003349705600101, 86.888320010560051), point1=(95.63141488642971, 
    86.888320010560051))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    11.043004503581527, 27.721487904505548), point1=(16.192868175418162, 
    27.721487904505548))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    20.366882435838313, 92.668805124241871), point1=(27.178953086836088, 
    92.668805124241871))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    72.767586096638468, 106.79485502483942), point1=(78.839827032005587, 
    106.79485502483942))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    43.061501584065311, 105.37835463481537), point1=(49.385108164196254, 
    105.37835463481537))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    52.85493812327455, 6.5979564635086971), point1=(59.30575112268744, 
    6.5979564635086971))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    95.811985543960006, 141.54375000348048), point1=(102.15171590333206, 
    141.54375000348048))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    106.19497674743582, 58.631649632849175), point1=(111.5450057841699, 
    58.631649632849175))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    66.347094985900966, 117.54668529642204), point1=(72.080267873138979, 
    117.54668529642204))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    82.327700542404727, 41.231331146484877), point1=(87.345716666076825, 
    41.231331146484877))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    99.311251299694248, 71.457253899897225), point1=(105.68932314831588, 
    71.457253899897225))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    100.21783428248099, 45.598403807085162), point1=(107.36834279042898, 
    45.598403807085162))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    32.215632082145603, 17.247426649652219), point1=(37.773300383238833, 
    17.247426649652219))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    117.25082242089826, 27.429246301366639), point1=(122.73998242489155, 
    27.429246301366639))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    42.010728659408812, 35.794166932294218), point1=(47.617335526817364, 
    35.794166932294218))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    53.04289391721943, 81.936396108930026), point1=(60.004492251321032, 
    81.936396108930026))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    132.85232294064159, 104.07659053535292), point1=(139.38521664245619, 
    104.07659053535292))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    102.18377616558739, 26.916868515968467), point1=(109.08425779897019, 
    26.916868515968467))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    139.2284197893012, 67.998267823624786), point1=(146.65289195006713, 
    67.998267823624786))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    14.082225850822605, 122.45484944110964), point1=(20.772381152353418, 
    122.45484944110964))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    15.18389899286548, 41.241926318726186), point1=(21.625616687899253, 
    41.241926318726186))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    132.18932170404065, 138.01439788917321), point1=(137.38630927561513, 
    138.01439788917321))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    60.339579457569201, 47.025091459845399), point1=(67.006400322065801, 
    47.025091459845399))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    121.90134918754701, 56.640359392807753), point1=(129.69914517699169, 
    56.640359392807753))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    112.27172686678797, 76.81585687707414), point1=(118.91464612174613, 
    76.81585687707414))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    75.482602443730457, 54.645929066375743), point1=(81.202813735691805, 
    54.645929066375743))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    89.889789373223124, 14.21102605560683), point1=(96.450305583502214, 
    14.21102605560683))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    13.216322940271958, 7.1134803317696447), point1=(18.402813379731974, 
    7.1134803317696447))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    64.173383185238393, 93.933812683919683), point1=(70.340277658924379, 
    93.933812683919683))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    30.201872362648611, 112.57108574265123), point1=(36.816938018951582, 
    112.57108574265123))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    126.80469321798287, 72.723718734885978), point1=(132.55040465353932, 
    72.723718734885978))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    80.458431371150596, 134.55386696203863), point1=(86.496011174540655, 
    134.55386696203863))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    73.146679796203813, 76.524786167081146), point1=(78.299551046563195, 
    76.524786167081146))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    115.2960478803658, 141.65778095500892), point1=(120.63570386742749, 
    141.65778095500892))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    31.379717363992892, 33.414258374802763), point1=(36.445467989486552, 
    33.414258374802763))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    77.191283364948532, 89.551038751952703), point1=(83.913119674546763, 
    89.551038751952703))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    29.338742264605266, 68.208915848894577), point1=(37.14991625879837, 
    68.208915848894577))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    139.97934703680721, 83.806673929912648), point1=(145.87004298348515, 
    83.806673929912648))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    123.49248670827509, 118.68102071405211), point1=(128.91962350456302, 
    118.68102071405211))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    9.9961455966599999, 56.775077255345714), point1=(15.113356213486732, 
    56.775077255345714))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    60.041592451593203, 59.778693533025155), point1=(65.628414508582409, 
    59.778693533025155))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    71.755187659162416, 38.961090493177366), point1=(77.265764641297636, 
    38.961090493177366))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    70.260402766159459, 7.4814733717898818), point1=(75.857728036098464, 
    7.4814733717898818))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    44.922224288999651, 20.571459821857164), point1=(50.606599065540884, 
    20.571459821857164))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    49.296733308168847, 141.39522646382378), point1=(55.986854836916223, 
    141.39522646382378))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    33.715972600424102, 127.02487027568506), point1=(40.087348558142949, 
    127.02487027568506))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    102.33335416087367, 84.432098318873813), point1=(107.55476347715978, 
    84.432098318873813))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    57.274151335411467, 108.00077468801958), point1=(63.741210176557772, 
    108.00077468801958))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    9.2258999342741514, 102.97264052813281), point1=(17.00542038323896, 
    102.97264052813281))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    88.255647855082415, 53.743915483392293), point1=(94.181965903490379, 
    53.743915483392293))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    16.084867378190577, 142.98223055723477), point1=(21.642105053798751, 
    142.98223055723477))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    84.823441901251897, 68.484045060620701), point1=(92.58090536324336, 
    68.484045060620701))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    122.13336070923296, 130.21361262780536), point1=(127.4126060210623, 
    130.21361262780536))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    86.501595146192074, 102.39776701611525), point1=(91.572897098996037, 
    102.39776701611525))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    24.785924412010875, 7.8180995910757449), point1=(30.606921105720225, 
    7.8180995910757449))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    112.18209685294188, 41.744751886174598), point1=(117.59168178176461, 
    41.744751886174598))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    40.631788641913936, 76.987114573171084), point1=(45.680829267199286, 
    76.987114573171084))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    144.53164584689341, 17.445059363214071), point1=(149.54957611995826, 
    17.445059363214071))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    142.82636330898382, 116.68218543754598), point1=(147.91566355512632, 
    116.68218543754598))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    5.8875229340835835, 17.431415787156475), point1=(10.974544280787594, 
    17.431415787156475))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    87.88484665372107, 28.419804607856637), point1=(93.244937997702323, 
    28.419804607856637))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    7.486158747272059, 89.275003215648752), point1=(13.276743188225343, 
    89.275003215648752))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    36.584427825494657, 7.5844833129715354), point1=(41.524481508275642, 
    7.5844833129715354))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    71.732726851971748, 127.6708542671323), point1=(75.597162923325428, 
    127.6708542671323))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    107.89796920503073, 93.768894246879711), point1=(112.53356982515223, 
    93.768894246879711))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    95.044074931760591, 35.22014144395007), point1=(98.164129981728237, 
    35.22014144395007))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    65.012322155254438, 80.687896748628688), point1=(68.848438971362555, 
    80.687896748628688))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    30.765478097944825, 79.783301685235543), point1=(33.907014480495768, 
    79.783301685235543))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    67.123050339538523, 31.552103183857593), point1=(70.163704701153478, 
    31.552103183857593))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    17.231986862188407, 19.520034931828995), point1=(21.218182218288099, 
    19.520034931828995))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    60.841653101855499, 70.962340484792662), point1=(64.171574117069113, 
    70.962340484792662))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    143.90398171349366, 144.19044203961849), point1=(148.26373072330881, 
    144.19044203961849))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    124.77555626439661, 37.890268678308473), point1=(128.73732943489495, 
    37.890268678308473))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    59.864629588827917, 145.76696622249796), point1=(63.31371234873518, 
    145.76696622249796))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    3.0351763528195628, 42.274557633379906), point1=(6.0362877293417441, 
    42.274557633379906))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    7.1794299878524761, 132.92153216723747), point1=(11.507009708065709, 
    132.92153216723747))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    36.940087906318084, 145.97889435681014), point1=(40.687281692030481, 
    145.97889435681014))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    4.0543571148167477, 114.39995062292822), point1=(7.6899238174755586, 
    114.39995062292822))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    4.8948524118748393, 67.654660105526474), point1=(9.333402341572576, 
    67.654660105526474))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    105.90106687859944, 138.85891304342391), point1=(109.07798341867692, 
    138.85891304342391))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    82.49713912795508, 7.1443803481099968), point1=(85.638457896904455, 
    7.1443803481099968))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    70.290357150851989, 65.589169763148476), point1=(74.510252622268325, 
    65.589169763148476))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    132.78213782471096, 92.370654587369131), point1=(136.30984165355656, 
    92.370654587369131))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    28.586324051965402, 100.17807549435673), point1=(32.472627991614104, 
    100.17807549435673))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    142.79195450410401, 107.62172508204984), point1=(146.6722610678159, 
    107.62172508204984))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    73.098557886488209, 143.48989792638807), point1=(77.415081281411403, 
    143.48989792638807))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    89.714255265034851, 128.13289132519725), point1=(93.166073164022364, 
    128.13289132519725))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    128.50163812252023, 81.604198505164206), point1=(131.56294571742188, 
    81.604198505164206))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    58.90226980358694, 36.174452168565495), point1=(62.674779891304155, 
    36.174452168565495))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    20.321527952172829, 27.895492933246945), point1=(24.436365103606246, 
    27.895492933246945))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    114.24773443163392, 87.085762012633751), point1=(117.51198171002127, 
    87.085762012633751))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    3.9536664275166888, 5.7997177630752965), point1=(6.9929340485246172, 
    5.7997177630752965))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    21.248733515234747, 105.1310489923117), point1=(24.942904422971129, 
    105.1310489923117))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    102.04851292800949, 116.1939242003898), point1=(106.20786050095882, 
    116.1939242003898))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    146.12475236813998, 5.544780834386648), point1=(149.13283994695513, 
    5.544780834386648))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    126.2551367856455, 4.5593931993778982), point1=(130.10237505826672, 
    4.5593931993778982))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    137.97487112865863, 4.7768728845591131), point1=(142.36279493318409, 
    4.7768728845591131))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    144.4997822638627, 99.513970581787774), point1=(147.62434075808977, 
    99.513970581787774))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    126.73102252637925, 45.087367294301686), point1=(129.7466956067837, 
    45.087367294301686))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    6.2116597641379778, 140.46392470354741), point1=(9.3299174909044886, 
    140.46392470354741))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    19.407015771372134, 133.45732147667687), point1=(22.976671798016458, 
    133.45732147667687))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    50.594887524461221, 32.940275349010562), point1=(53.605352882176852, 
    32.940275349010562))
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    97.739360718107008, 124.40905464287694), point1=(101.32708978781099, 
    124.40905464287694))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='MainPart', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['MainPart'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    59.476569400776363, 23.583579248206139), point1=(66.851665276939386, 
    23.583579248206139))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-0', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-0'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-0')
mdb.models['Model-1'].materials['Part-0'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-0', name='Part-0', 
    thickness=None)
mdb.models['Model-1'].parts['Part-0'].Set(faces=
    mdb.models['Model-1'].parts['Part-0'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-0'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-0'].sets['Set-1'], sectionName='Part-0', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    14.713685435958773, 75.99897225747749), point1=(22.57948328848537, 
    75.99897225747749))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-1', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-1'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-1')
mdb.models['Model-1'].materials['Part-1'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-1', name='Part-1', 
    thickness=None)
mdb.models['Model-1'].parts['Part-1'].Set(faces=
    mdb.models['Model-1'].parts['Part-1'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-1'].sets['Set-1'], sectionName='Part-1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    28.051608057131045, 139.34084391983549), point1=(34.079662120056113, 
    139.34084391983549))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-2', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-2'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-2')
mdb.models['Model-1'].materials['Part-2'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-2', name='Part-2', 
    thickness=None)
mdb.models['Model-1'].parts['Part-2'].Set(faces=
    mdb.models['Model-1'].parts['Part-2'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-2'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-2'].sets['Set-1'], sectionName='Part-2', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    138.76753472154326, 47.302006617211426), point1=(145.8276402946365, 
    47.302006617211426))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-3', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-3'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-3')
mdb.models['Model-1'].materials['Part-3'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-3', name='Part-3', 
    thickness=None)
mdb.models['Model-1'].parts['Part-3'].Set(faces=
    mdb.models['Model-1'].parts['Part-3'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-3'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-3'].sets['Set-1'], sectionName='Part-3', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    108.27864694743408, 128.82319642640508), point1=(114.87113912374971, 
    128.82319642640508))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-4', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-4'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-4')
mdb.models['Model-1'].materials['Part-4'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-4', name='Part-4', 
    thickness=None)
mdb.models['Model-1'].parts['Part-4'].Set(faces=
    mdb.models['Model-1'].parts['Part-4'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-4'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-4'].sets['Set-1'], sectionName='Part-4', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    47.218569253778895, 66.744066924216668), point1=(53.038948549314952, 
    66.744066924216668))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-5', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-5'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-5')
mdb.models['Model-1'].materials['Part-5'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-5', name='Part-5', 
    thickness=None)
mdb.models['Model-1'].parts['Part-5'].Set(faces=
    mdb.models['Model-1'].parts['Part-5'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-5'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-5'].sets['Set-1'], sectionName='Part-5', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    89.680106426207772, 116.93631084022527), point1=(97.047148546542857, 
    116.93631084022527))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-6', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-6'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-6')
mdb.models['Model-1'].materials['Part-6'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-6', name='Part-6', 
    thickness=None)
mdb.models['Model-1'].parts['Part-6'].Set(faces=
    mdb.models['Model-1'].parts['Part-6'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-6'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-6'].sets['Set-1'], sectionName='Part-6', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    136.32346198712818, 31.382301685686155), point1=(143.86917626735641, 
    31.382301685686155))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-7', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-7'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-7')
mdb.models['Model-1'].materials['Part-7'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-7', name='Part-7', 
    thickness=None)
mdb.models['Model-1'].parts['Part-7'].Set(faces=
    mdb.models['Model-1'].parts['Part-7'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-7'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-7'].sets['Set-1'], sectionName='Part-7', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    123.37375136530329, 95.545737683261478), point1=(128.57654977907237, 
    95.545737683261478))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-8', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-8'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-8')
mdb.models['Model-1'].materials['Part-8'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-8', name='Part-8', 
    thickness=None)
mdb.models['Model-1'].parts['Part-8'].Set(faces=
    mdb.models['Model-1'].parts['Part-8'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-8'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-8'].sets['Set-1'], sectionName='Part-8', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    105.3200522706847, 6.6636466709621978), point1=(111.85925794084898, 
    6.6636466709621978))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-9', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-9'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-9')
mdb.models['Model-1'].materials['Part-9'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-9', name='Part-9', 
    thickness=None)
mdb.models['Model-1'].parts['Part-9'].Set(faces=
    mdb.models['Model-1'].parts['Part-9'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-9'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-9'].sets['Set-1'], sectionName='Part-9', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    134.2016936198826, 126.97726324793315), point1=(139.58023795634162, 
    126.97726324793315))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-10', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-10'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-10')
mdb.models['Model-1'].materials['Part-10'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-10', name=
    'Part-10', thickness=None)
mdb.models['Model-1'].parts['Part-10'].Set(faces=
    mdb.models['Model-1'].parts['Part-10'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-10'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-10'].sets['Set-1'], sectionName='Part-10'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    49.382012947322799, 124.59220018878297), point1=(57.112847014233537, 
    124.59220018878297))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-11', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-11'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-11')
mdb.models['Model-1'].materials['Part-11'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-11', name=
    'Part-11', thickness=None)
mdb.models['Model-1'].parts['Part-11'].Set(faces=
    mdb.models['Model-1'].parts['Part-11'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-11'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-11'].sets['Set-1'], sectionName='Part-11'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    112.34031382986628, 113.77396925787727), point1=(118.68859238107905, 
    113.77396925787727))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-12', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-12'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-12')
mdb.models['Model-1'].materials['Part-12'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-12', name=
    'Part-12', thickness=None)
mdb.models['Model-1'].parts['Part-12'].Set(faces=
    mdb.models['Model-1'].parts['Part-12'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-12'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-12'].sets['Set-1'], sectionName='Part-12'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    29.202550662565656, 51.897436884511777), point1=(36.634156809297458, 
    51.897436884511777))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-13', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-13'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-13')
mdb.models['Model-1'].materials['Part-13'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-13', name=
    'Part-13', thickness=None)
mdb.models['Model-1'].parts['Part-13'].Set(faces=
    mdb.models['Model-1'].parts['Part-13'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-13'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-13'].sets['Set-1'], sectionName='Part-13'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    98.797148203270851, 102.18263368215464), point1=(104.80650211055647, 
    102.18263368215464))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-14', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-14'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-14')
mdb.models['Model-1'].materials['Part-14'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-14', name=
    'Part-14', thickness=None)
mdb.models['Model-1'].parts['Part-14'].Set(faces=
    mdb.models['Model-1'].parts['Part-14'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-14'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-14'].sets['Set-1'], sectionName='Part-14'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    133.01602750034391, 14.857326802917104), point1=(139.39686904375313, 
    14.857326802917104))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-15', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-15'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-15')
mdb.models['Model-1'].materials['Part-15'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-15', name=
    'Part-15', thickness=None)
mdb.models['Model-1'].parts['Part-15'].Set(faces=
    mdb.models['Model-1'].parts['Part-15'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-15'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-15'].sets['Set-1'], sectionName='Part-15'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    118.40859964671645, 13.765294595814808), point1=(125.95477468244042, 
    13.765294595814808))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-16', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-16'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-16')
mdb.models['Model-1'].materials['Part-16'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-16', name=
    'Part-16', thickness=None)
mdb.models['Model-1'].parts['Part-16'].Set(faces=
    mdb.models['Model-1'].parts['Part-16'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-16'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-16'].sets['Set-1'], sectionName='Part-16'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    52.594705708469924, 94.246947067520892), point1=(57.91942632208351, 
    94.246947067520892))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-17', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-17'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-17')
mdb.models['Model-1'].materials['Part-17'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-17', name=
    'Part-17', thickness=None)
mdb.models['Model-1'].parts['Part-17'].Set(faces=
    mdb.models['Model-1'].parts['Part-17'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-17'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-17'].sets['Set-1'], sectionName='Part-17'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    36.45058278144375, 90.598520549206668), point1=(42.849720167957557, 
    90.598520549206668))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-18', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-18'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-18')
mdb.models['Model-1'].materials['Part-18'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-18', name=
    'Part-18', thickness=None)
mdb.models['Model-1'].parts['Part-18'].Set(faces=
    mdb.models['Model-1'].parts['Part-18'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-18'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-18'].sets['Set-1'], sectionName='Part-18'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    76.833832452240955, 21.206542197091693), point1=(83.953986189028299, 
    21.206542197091693))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-19', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-19'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-19')
mdb.models['Model-1'].materials['Part-19'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-19', name=
    'Part-19', thickness=None)
mdb.models['Model-1'].parts['Part-19'].Set(faces=
    mdb.models['Model-1'].parts['Part-19'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-19'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-19'].sets['Set-1'], sectionName='Part-19'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    43.942853054222617, 54.32985530439948), point1=(50.90389439847818, 
    54.32985530439948))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-20', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-20'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-20')
mdb.models['Model-1'].materials['Part-20'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-20', name=
    'Part-20', thickness=None)
mdb.models['Model-1'].parts['Part-20'].Set(faces=
    mdb.models['Model-1'].parts['Part-20'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-20'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-20'].sets['Set-1'], sectionName='Part-20'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    63.839444247769947, 134.15824167065927), point1=(69.070826744872278, 
    134.15824167065927))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-21', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-21'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-21')
mdb.models['Model-1'].materials['Part-21'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-21', name=
    'Part-21', thickness=None)
mdb.models['Model-1'].parts['Part-21'].Set(faces=
    mdb.models['Model-1'].parts['Part-21'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-21'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-21'].sets['Set-1'], sectionName='Part-21'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    143.63573737131702, 133.21904605611775), point1=(148.7861427071538, 
    133.21904605611775))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-22', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-22'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-22')
mdb.models['Model-1'].materials['Part-22'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-22', name=
    'Part-22', thickness=None)
mdb.models['Model-1'].parts['Part-22'].Set(faces=
    mdb.models['Model-1'].parts['Part-22'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-22'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-22'].sets['Set-1'], sectionName='Part-22'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    90.003349705600101, 86.888320010560051), point1=(95.63141488642971, 
    86.888320010560051))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-23', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-23'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-23')
mdb.models['Model-1'].materials['Part-23'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-23', name=
    'Part-23', thickness=None)
mdb.models['Model-1'].parts['Part-23'].Set(faces=
    mdb.models['Model-1'].parts['Part-23'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-23'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-23'].sets['Set-1'], sectionName='Part-23'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    11.043004503581527, 27.721487904505548), point1=(16.192868175418162, 
    27.721487904505548))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-24', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-24'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-24')
mdb.models['Model-1'].materials['Part-24'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-24', name=
    'Part-24', thickness=None)
mdb.models['Model-1'].parts['Part-24'].Set(faces=
    mdb.models['Model-1'].parts['Part-24'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-24'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-24'].sets['Set-1'], sectionName='Part-24'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    20.366882435838313, 92.668805124241871), point1=(27.178953086836088, 
    92.668805124241871))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-25', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-25'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-25')
mdb.models['Model-1'].materials['Part-25'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-25', name=
    'Part-25', thickness=None)
mdb.models['Model-1'].parts['Part-25'].Set(faces=
    mdb.models['Model-1'].parts['Part-25'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-25'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-25'].sets['Set-1'], sectionName='Part-25'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    72.767586096638468, 106.79485502483942), point1=(78.839827032005587, 
    106.79485502483942))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-26', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-26'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-26')
mdb.models['Model-1'].materials['Part-26'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-26', name=
    'Part-26', thickness=None)
mdb.models['Model-1'].parts['Part-26'].Set(faces=
    mdb.models['Model-1'].parts['Part-26'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-26'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-26'].sets['Set-1'], sectionName='Part-26'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    43.061501584065311, 105.37835463481537), point1=(49.385108164196254, 
    105.37835463481537))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-27', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-27'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-27')
mdb.models['Model-1'].materials['Part-27'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-27', name=
    'Part-27', thickness=None)
mdb.models['Model-1'].parts['Part-27'].Set(faces=
    mdb.models['Model-1'].parts['Part-27'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-27'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-27'].sets['Set-1'], sectionName='Part-27'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    52.85493812327455, 6.5979564635086971), point1=(59.30575112268744, 
    6.5979564635086971))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-28', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-28'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-28')
mdb.models['Model-1'].materials['Part-28'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-28', name=
    'Part-28', thickness=None)
mdb.models['Model-1'].parts['Part-28'].Set(faces=
    mdb.models['Model-1'].parts['Part-28'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-28'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-28'].sets['Set-1'], sectionName='Part-28'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    95.811985543960006, 141.54375000348048), point1=(102.15171590333206, 
    141.54375000348048))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-29', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-29'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-29')
mdb.models['Model-1'].materials['Part-29'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-29', name=
    'Part-29', thickness=None)
mdb.models['Model-1'].parts['Part-29'].Set(faces=
    mdb.models['Model-1'].parts['Part-29'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-29'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-29'].sets['Set-1'], sectionName='Part-29'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    106.19497674743582, 58.631649632849175), point1=(111.5450057841699, 
    58.631649632849175))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-30', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-30'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-30')
mdb.models['Model-1'].materials['Part-30'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-30', name=
    'Part-30', thickness=None)
mdb.models['Model-1'].parts['Part-30'].Set(faces=
    mdb.models['Model-1'].parts['Part-30'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-30'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-30'].sets['Set-1'], sectionName='Part-30'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    66.347094985900966, 117.54668529642204), point1=(72.080267873138979, 
    117.54668529642204))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-31', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-31'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-31')
mdb.models['Model-1'].materials['Part-31'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-31', name=
    'Part-31', thickness=None)
mdb.models['Model-1'].parts['Part-31'].Set(faces=
    mdb.models['Model-1'].parts['Part-31'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-31'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-31'].sets['Set-1'], sectionName='Part-31'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    82.327700542404727, 41.231331146484877), point1=(87.345716666076825, 
    41.231331146484877))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-32', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-32'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-32')
mdb.models['Model-1'].materials['Part-32'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-32', name=
    'Part-32', thickness=None)
mdb.models['Model-1'].parts['Part-32'].Set(faces=
    mdb.models['Model-1'].parts['Part-32'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-32'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-32'].sets['Set-1'], sectionName='Part-32'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    99.311251299694248, 71.457253899897225), point1=(105.68932314831588, 
    71.457253899897225))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-33', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-33'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-33')
mdb.models['Model-1'].materials['Part-33'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-33', name=
    'Part-33', thickness=None)
mdb.models['Model-1'].parts['Part-33'].Set(faces=
    mdb.models['Model-1'].parts['Part-33'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-33'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-33'].sets['Set-1'], sectionName='Part-33'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    100.21783428248099, 45.598403807085162), point1=(107.36834279042898, 
    45.598403807085162))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-34', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-34'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-34')
mdb.models['Model-1'].materials['Part-34'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-34', name=
    'Part-34', thickness=None)
mdb.models['Model-1'].parts['Part-34'].Set(faces=
    mdb.models['Model-1'].parts['Part-34'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-34'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-34'].sets['Set-1'], sectionName='Part-34'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    32.215632082145603, 17.247426649652219), point1=(37.773300383238833, 
    17.247426649652219))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-35', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-35'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-35')
mdb.models['Model-1'].materials['Part-35'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-35', name=
    'Part-35', thickness=None)
mdb.models['Model-1'].parts['Part-35'].Set(faces=
    mdb.models['Model-1'].parts['Part-35'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-35'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-35'].sets['Set-1'], sectionName='Part-35'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    117.25082242089826, 27.429246301366639), point1=(122.73998242489155, 
    27.429246301366639))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-36', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-36'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-36')
mdb.models['Model-1'].materials['Part-36'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-36', name=
    'Part-36', thickness=None)
mdb.models['Model-1'].parts['Part-36'].Set(faces=
    mdb.models['Model-1'].parts['Part-36'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-36'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-36'].sets['Set-1'], sectionName='Part-36'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    42.010728659408812, 35.794166932294218), point1=(47.617335526817364, 
    35.794166932294218))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-37', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-37'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-37')
mdb.models['Model-1'].materials['Part-37'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-37', name=
    'Part-37', thickness=None)
mdb.models['Model-1'].parts['Part-37'].Set(faces=
    mdb.models['Model-1'].parts['Part-37'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-37'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-37'].sets['Set-1'], sectionName='Part-37'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    53.04289391721943, 81.936396108930026), point1=(60.004492251321032, 
    81.936396108930026))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-38', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-38'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-38')
mdb.models['Model-1'].materials['Part-38'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-38', name=
    'Part-38', thickness=None)
mdb.models['Model-1'].parts['Part-38'].Set(faces=
    mdb.models['Model-1'].parts['Part-38'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-38'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-38'].sets['Set-1'], sectionName='Part-38'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    132.85232294064159, 104.07659053535292), point1=(139.38521664245619, 
    104.07659053535292))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-39', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-39'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-39')
mdb.models['Model-1'].materials['Part-39'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-39', name=
    'Part-39', thickness=None)
mdb.models['Model-1'].parts['Part-39'].Set(faces=
    mdb.models['Model-1'].parts['Part-39'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-39'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-39'].sets['Set-1'], sectionName='Part-39'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    102.18377616558739, 26.916868515968467), point1=(109.08425779897019, 
    26.916868515968467))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-40', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-40'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-40')
mdb.models['Model-1'].materials['Part-40'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-40', name=
    'Part-40', thickness=None)
mdb.models['Model-1'].parts['Part-40'].Set(faces=
    mdb.models['Model-1'].parts['Part-40'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-40'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-40'].sets['Set-1'], sectionName='Part-40'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    139.2284197893012, 67.998267823624786), point1=(146.65289195006713, 
    67.998267823624786))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-41', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-41'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-41')
mdb.models['Model-1'].materials['Part-41'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-41', name=
    'Part-41', thickness=None)
mdb.models['Model-1'].parts['Part-41'].Set(faces=
    mdb.models['Model-1'].parts['Part-41'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-41'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-41'].sets['Set-1'], sectionName='Part-41'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    14.082225850822605, 122.45484944110964), point1=(20.772381152353418, 
    122.45484944110964))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-42', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-42'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-42')
mdb.models['Model-1'].materials['Part-42'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-42', name=
    'Part-42', thickness=None)
mdb.models['Model-1'].parts['Part-42'].Set(faces=
    mdb.models['Model-1'].parts['Part-42'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-42'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-42'].sets['Set-1'], sectionName='Part-42'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    15.18389899286548, 41.241926318726186), point1=(21.625616687899253, 
    41.241926318726186))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-43', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-43'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-43')
mdb.models['Model-1'].materials['Part-43'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-43', name=
    'Part-43', thickness=None)
mdb.models['Model-1'].parts['Part-43'].Set(faces=
    mdb.models['Model-1'].parts['Part-43'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-43'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-43'].sets['Set-1'], sectionName='Part-43'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    132.18932170404065, 138.01439788917321), point1=(137.38630927561513, 
    138.01439788917321))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-44', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-44'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-44')
mdb.models['Model-1'].materials['Part-44'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-44', name=
    'Part-44', thickness=None)
mdb.models['Model-1'].parts['Part-44'].Set(faces=
    mdb.models['Model-1'].parts['Part-44'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-44'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-44'].sets['Set-1'], sectionName='Part-44'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    60.339579457569201, 47.025091459845399), point1=(67.006400322065801, 
    47.025091459845399))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-45', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-45'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-45')
mdb.models['Model-1'].materials['Part-45'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-45', name=
    'Part-45', thickness=None)
mdb.models['Model-1'].parts['Part-45'].Set(faces=
    mdb.models['Model-1'].parts['Part-45'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-45'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-45'].sets['Set-1'], sectionName='Part-45'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    121.90134918754701, 56.640359392807753), point1=(129.69914517699169, 
    56.640359392807753))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-46', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-46'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-46')
mdb.models['Model-1'].materials['Part-46'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-46', name=
    'Part-46', thickness=None)
mdb.models['Model-1'].parts['Part-46'].Set(faces=
    mdb.models['Model-1'].parts['Part-46'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-46'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-46'].sets['Set-1'], sectionName='Part-46'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    112.27172686678797, 76.81585687707414), point1=(118.91464612174613, 
    76.81585687707414))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-47', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-47'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-47')
mdb.models['Model-1'].materials['Part-47'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-47', name=
    'Part-47', thickness=None)
mdb.models['Model-1'].parts['Part-47'].Set(faces=
    mdb.models['Model-1'].parts['Part-47'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-47'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-47'].sets['Set-1'], sectionName='Part-47'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    75.482602443730457, 54.645929066375743), point1=(81.202813735691805, 
    54.645929066375743))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-48', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-48'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-48')
mdb.models['Model-1'].materials['Part-48'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-48', name=
    'Part-48', thickness=None)
mdb.models['Model-1'].parts['Part-48'].Set(faces=
    mdb.models['Model-1'].parts['Part-48'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-48'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-48'].sets['Set-1'], sectionName='Part-48'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    89.889789373223124, 14.21102605560683), point1=(96.450305583502214, 
    14.21102605560683))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-49', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-49'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-49')
mdb.models['Model-1'].materials['Part-49'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-49', name=
    'Part-49', thickness=None)
mdb.models['Model-1'].parts['Part-49'].Set(faces=
    mdb.models['Model-1'].parts['Part-49'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-49'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-49'].sets['Set-1'], sectionName='Part-49'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    13.216322940271958, 7.1134803317696447), point1=(18.402813379731974, 
    7.1134803317696447))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-50', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-50'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-50')
mdb.models['Model-1'].materials['Part-50'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-50', name=
    'Part-50', thickness=None)
mdb.models['Model-1'].parts['Part-50'].Set(faces=
    mdb.models['Model-1'].parts['Part-50'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-50'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-50'].sets['Set-1'], sectionName='Part-50'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    64.173383185238393, 93.933812683919683), point1=(70.340277658924379, 
    93.933812683919683))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-51', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-51'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-51')
mdb.models['Model-1'].materials['Part-51'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-51', name=
    'Part-51', thickness=None)
mdb.models['Model-1'].parts['Part-51'].Set(faces=
    mdb.models['Model-1'].parts['Part-51'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-51'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-51'].sets['Set-1'], sectionName='Part-51'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    30.201872362648611, 112.57108574265123), point1=(36.816938018951582, 
    112.57108574265123))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-52', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-52'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-52')
mdb.models['Model-1'].materials['Part-52'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-52', name=
    'Part-52', thickness=None)
mdb.models['Model-1'].parts['Part-52'].Set(faces=
    mdb.models['Model-1'].parts['Part-52'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-52'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-52'].sets['Set-1'], sectionName='Part-52'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    126.80469321798287, 72.723718734885978), point1=(132.55040465353932, 
    72.723718734885978))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-53', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-53'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-53')
mdb.models['Model-1'].materials['Part-53'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-53', name=
    'Part-53', thickness=None)
mdb.models['Model-1'].parts['Part-53'].Set(faces=
    mdb.models['Model-1'].parts['Part-53'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-53'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-53'].sets['Set-1'], sectionName='Part-53'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    80.458431371150596, 134.55386696203863), point1=(86.496011174540655, 
    134.55386696203863))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-54', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-54'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-54')
mdb.models['Model-1'].materials['Part-54'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-54', name=
    'Part-54', thickness=None)
mdb.models['Model-1'].parts['Part-54'].Set(faces=
    mdb.models['Model-1'].parts['Part-54'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-54'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-54'].sets['Set-1'], sectionName='Part-54'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    73.146679796203813, 76.524786167081146), point1=(78.299551046563195, 
    76.524786167081146))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-55', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-55'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-55')
mdb.models['Model-1'].materials['Part-55'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-55', name=
    'Part-55', thickness=None)
mdb.models['Model-1'].parts['Part-55'].Set(faces=
    mdb.models['Model-1'].parts['Part-55'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-55'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-55'].sets['Set-1'], sectionName='Part-55'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    115.2960478803658, 141.65778095500892), point1=(120.63570386742749, 
    141.65778095500892))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-56', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-56'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-56')
mdb.models['Model-1'].materials['Part-56'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-56', name=
    'Part-56', thickness=None)
mdb.models['Model-1'].parts['Part-56'].Set(faces=
    mdb.models['Model-1'].parts['Part-56'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-56'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-56'].sets['Set-1'], sectionName='Part-56'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    31.379717363992892, 33.414258374802763), point1=(36.445467989486552, 
    33.414258374802763))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-57', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-57'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-57')
mdb.models['Model-1'].materials['Part-57'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-57', name=
    'Part-57', thickness=None)
mdb.models['Model-1'].parts['Part-57'].Set(faces=
    mdb.models['Model-1'].parts['Part-57'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-57'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-57'].sets['Set-1'], sectionName='Part-57'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    77.191283364948532, 89.551038751952703), point1=(83.913119674546763, 
    89.551038751952703))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-58', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-58'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-58')
mdb.models['Model-1'].materials['Part-58'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-58', name=
    'Part-58', thickness=None)
mdb.models['Model-1'].parts['Part-58'].Set(faces=
    mdb.models['Model-1'].parts['Part-58'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-58'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-58'].sets['Set-1'], sectionName='Part-58'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    29.338742264605266, 68.208915848894577), point1=(37.14991625879837, 
    68.208915848894577))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-59', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-59'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-59')
mdb.models['Model-1'].materials['Part-59'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-59', name=
    'Part-59', thickness=None)
mdb.models['Model-1'].parts['Part-59'].Set(faces=
    mdb.models['Model-1'].parts['Part-59'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-59'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-59'].sets['Set-1'], sectionName='Part-59'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    139.97934703680721, 83.806673929912648), point1=(145.87004298348515, 
    83.806673929912648))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-60', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-60'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-60')
mdb.models['Model-1'].materials['Part-60'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-60', name=
    'Part-60', thickness=None)
mdb.models['Model-1'].parts['Part-60'].Set(faces=
    mdb.models['Model-1'].parts['Part-60'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-60'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-60'].sets['Set-1'], sectionName='Part-60'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    123.49248670827509, 118.68102071405211), point1=(128.91962350456302, 
    118.68102071405211))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-61', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-61'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-61')
mdb.models['Model-1'].materials['Part-61'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-61', name=
    'Part-61', thickness=None)
mdb.models['Model-1'].parts['Part-61'].Set(faces=
    mdb.models['Model-1'].parts['Part-61'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-61'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-61'].sets['Set-1'], sectionName='Part-61'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    9.9961455966599999, 56.775077255345714), point1=(15.113356213486732, 
    56.775077255345714))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-62', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-62'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-62')
mdb.models['Model-1'].materials['Part-62'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-62', name=
    'Part-62', thickness=None)
mdb.models['Model-1'].parts['Part-62'].Set(faces=
    mdb.models['Model-1'].parts['Part-62'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-62'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-62'].sets['Set-1'], sectionName='Part-62'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    60.041592451593203, 59.778693533025155), point1=(65.628414508582409, 
    59.778693533025155))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-63', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-63'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-63')
mdb.models['Model-1'].materials['Part-63'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-63', name=
    'Part-63', thickness=None)
mdb.models['Model-1'].parts['Part-63'].Set(faces=
    mdb.models['Model-1'].parts['Part-63'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-63'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-63'].sets['Set-1'], sectionName='Part-63'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    71.755187659162416, 38.961090493177366), point1=(77.265764641297636, 
    38.961090493177366))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-64', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-64'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-64')
mdb.models['Model-1'].materials['Part-64'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-64', name=
    'Part-64', thickness=None)
mdb.models['Model-1'].parts['Part-64'].Set(faces=
    mdb.models['Model-1'].parts['Part-64'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-64'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-64'].sets['Set-1'], sectionName='Part-64'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    70.260402766159459, 7.4814733717898818), point1=(75.857728036098464, 
    7.4814733717898818))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-65', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-65'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-65')
mdb.models['Model-1'].materials['Part-65'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-65', name=
    'Part-65', thickness=None)
mdb.models['Model-1'].parts['Part-65'].Set(faces=
    mdb.models['Model-1'].parts['Part-65'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-65'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-65'].sets['Set-1'], sectionName='Part-65'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    44.922224288999651, 20.571459821857164), point1=(50.606599065540884, 
    20.571459821857164))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-66', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-66'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-66')
mdb.models['Model-1'].materials['Part-66'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-66', name=
    'Part-66', thickness=None)
mdb.models['Model-1'].parts['Part-66'].Set(faces=
    mdb.models['Model-1'].parts['Part-66'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-66'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-66'].sets['Set-1'], sectionName='Part-66'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    49.296733308168847, 141.39522646382378), point1=(55.986854836916223, 
    141.39522646382378))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-67', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-67'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-67')
mdb.models['Model-1'].materials['Part-67'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-67', name=
    'Part-67', thickness=None)
mdb.models['Model-1'].parts['Part-67'].Set(faces=
    mdb.models['Model-1'].parts['Part-67'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-67'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-67'].sets['Set-1'], sectionName='Part-67'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    33.715972600424102, 127.02487027568506), point1=(40.087348558142949, 
    127.02487027568506))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-68', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-68'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-68')
mdb.models['Model-1'].materials['Part-68'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-68', name=
    'Part-68', thickness=None)
mdb.models['Model-1'].parts['Part-68'].Set(faces=
    mdb.models['Model-1'].parts['Part-68'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-68'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-68'].sets['Set-1'], sectionName='Part-68'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    102.33335416087367, 84.432098318873813), point1=(107.55476347715978, 
    84.432098318873813))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-69', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-69'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-69')
mdb.models['Model-1'].materials['Part-69'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-69', name=
    'Part-69', thickness=None)
mdb.models['Model-1'].parts['Part-69'].Set(faces=
    mdb.models['Model-1'].parts['Part-69'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-69'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-69'].sets['Set-1'], sectionName='Part-69'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    57.274151335411467, 108.00077468801958), point1=(63.741210176557772, 
    108.00077468801958))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-70', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-70'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-70')
mdb.models['Model-1'].materials['Part-70'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-70', name=
    'Part-70', thickness=None)
mdb.models['Model-1'].parts['Part-70'].Set(faces=
    mdb.models['Model-1'].parts['Part-70'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-70'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-70'].sets['Set-1'], sectionName='Part-70'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    9.2258999342741514, 102.97264052813281), point1=(17.00542038323896, 
    102.97264052813281))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-71', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-71'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-71')
mdb.models['Model-1'].materials['Part-71'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-71', name=
    'Part-71', thickness=None)
mdb.models['Model-1'].parts['Part-71'].Set(faces=
    mdb.models['Model-1'].parts['Part-71'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-71'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-71'].sets['Set-1'], sectionName='Part-71'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    88.255647855082415, 53.743915483392293), point1=(94.181965903490379, 
    53.743915483392293))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-72', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-72'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-72')
mdb.models['Model-1'].materials['Part-72'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-72', name=
    'Part-72', thickness=None)
mdb.models['Model-1'].parts['Part-72'].Set(faces=
    mdb.models['Model-1'].parts['Part-72'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-72'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-72'].sets['Set-1'], sectionName='Part-72'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    16.084867378190577, 142.98223055723477), point1=(21.642105053798751, 
    142.98223055723477))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-73', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-73'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-73')
mdb.models['Model-1'].materials['Part-73'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-73', name=
    'Part-73', thickness=None)
mdb.models['Model-1'].parts['Part-73'].Set(faces=
    mdb.models['Model-1'].parts['Part-73'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-73'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-73'].sets['Set-1'], sectionName='Part-73'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    84.823441901251897, 68.484045060620701), point1=(92.58090536324336, 
    68.484045060620701))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-74', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-74'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-74')
mdb.models['Model-1'].materials['Part-74'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-74', name=
    'Part-74', thickness=None)
mdb.models['Model-1'].parts['Part-74'].Set(faces=
    mdb.models['Model-1'].parts['Part-74'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-74'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-74'].sets['Set-1'], sectionName='Part-74'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    122.13336070923296, 130.21361262780536), point1=(127.4126060210623, 
    130.21361262780536))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-75', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-75'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-75')
mdb.models['Model-1'].materials['Part-75'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-75', name=
    'Part-75', thickness=None)
mdb.models['Model-1'].parts['Part-75'].Set(faces=
    mdb.models['Model-1'].parts['Part-75'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-75'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-75'].sets['Set-1'], sectionName='Part-75'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    86.501595146192074, 102.39776701611525), point1=(91.572897098996037, 
    102.39776701611525))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-76', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-76'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-76')
mdb.models['Model-1'].materials['Part-76'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-76', name=
    'Part-76', thickness=None)
mdb.models['Model-1'].parts['Part-76'].Set(faces=
    mdb.models['Model-1'].parts['Part-76'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-76'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-76'].sets['Set-1'], sectionName='Part-76'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    24.785924412010875, 7.8180995910757449), point1=(30.606921105720225, 
    7.8180995910757449))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-77', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-77'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-77')
mdb.models['Model-1'].materials['Part-77'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-77', name=
    'Part-77', thickness=None)
mdb.models['Model-1'].parts['Part-77'].Set(faces=
    mdb.models['Model-1'].parts['Part-77'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-77'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-77'].sets['Set-1'], sectionName='Part-77'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    112.18209685294188, 41.744751886174598), point1=(117.59168178176461, 
    41.744751886174598))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-78', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-78'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-78')
mdb.models['Model-1'].materials['Part-78'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-78', name=
    'Part-78', thickness=None)
mdb.models['Model-1'].parts['Part-78'].Set(faces=
    mdb.models['Model-1'].parts['Part-78'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-78'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-78'].sets['Set-1'], sectionName='Part-78'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    40.631788641913936, 76.987114573171084), point1=(45.680829267199286, 
    76.987114573171084))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-79', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-79'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-79')
mdb.models['Model-1'].materials['Part-79'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-79', name=
    'Part-79', thickness=None)
mdb.models['Model-1'].parts['Part-79'].Set(faces=
    mdb.models['Model-1'].parts['Part-79'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-79'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-79'].sets['Set-1'], sectionName='Part-79'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    144.53164584689341, 17.445059363214071), point1=(149.54957611995826, 
    17.445059363214071))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-80', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-80'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-80')
mdb.models['Model-1'].materials['Part-80'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-80', name=
    'Part-80', thickness=None)
mdb.models['Model-1'].parts['Part-80'].Set(faces=
    mdb.models['Model-1'].parts['Part-80'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-80'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-80'].sets['Set-1'], sectionName='Part-80'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    142.82636330898382, 116.68218543754598), point1=(147.91566355512632, 
    116.68218543754598))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-81', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-81'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-81')
mdb.models['Model-1'].materials['Part-81'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-81', name=
    'Part-81', thickness=None)
mdb.models['Model-1'].parts['Part-81'].Set(faces=
    mdb.models['Model-1'].parts['Part-81'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-81'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-81'].sets['Set-1'], sectionName='Part-81'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    5.8875229340835835, 17.431415787156475), point1=(10.974544280787594, 
    17.431415787156475))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-82', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-82'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-82')
mdb.models['Model-1'].materials['Part-82'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-82', name=
    'Part-82', thickness=None)
mdb.models['Model-1'].parts['Part-82'].Set(faces=
    mdb.models['Model-1'].parts['Part-82'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-82'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-82'].sets['Set-1'], sectionName='Part-82'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    87.88484665372107, 28.419804607856637), point1=(93.244937997702323, 
    28.419804607856637))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-83', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-83'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-83')
mdb.models['Model-1'].materials['Part-83'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-83', name=
    'Part-83', thickness=None)
mdb.models['Model-1'].parts['Part-83'].Set(faces=
    mdb.models['Model-1'].parts['Part-83'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-83'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-83'].sets['Set-1'], sectionName='Part-83'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    7.486158747272059, 89.275003215648752), point1=(13.276743188225343, 
    89.275003215648752))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-84', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-84'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-84')
mdb.models['Model-1'].materials['Part-84'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-84', name=
    'Part-84', thickness=None)
mdb.models['Model-1'].parts['Part-84'].Set(faces=
    mdb.models['Model-1'].parts['Part-84'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-84'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-84'].sets['Set-1'], sectionName='Part-84'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    36.584427825494657, 7.5844833129715354), point1=(41.524481508275642, 
    7.5844833129715354))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-85', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-85'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-85')
mdb.models['Model-1'].materials['Part-85'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-85', name=
    'Part-85', thickness=None)
mdb.models['Model-1'].parts['Part-85'].Set(faces=
    mdb.models['Model-1'].parts['Part-85'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-85'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-85'].sets['Set-1'], sectionName='Part-85'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    71.732726851971748, 127.6708542671323), point1=(75.597162923325428, 
    127.6708542671323))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-86', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-86'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-86')
mdb.models['Model-1'].materials['Part-86'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-86', name=
    'Part-86', thickness=None)
mdb.models['Model-1'].parts['Part-86'].Set(faces=
    mdb.models['Model-1'].parts['Part-86'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-86'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-86'].sets['Set-1'], sectionName='Part-86'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    107.89796920503073, 93.768894246879711), point1=(112.53356982515223, 
    93.768894246879711))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-87', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-87'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-87')
mdb.models['Model-1'].materials['Part-87'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-87', name=
    'Part-87', thickness=None)
mdb.models['Model-1'].parts['Part-87'].Set(faces=
    mdb.models['Model-1'].parts['Part-87'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-87'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-87'].sets['Set-1'], sectionName='Part-87'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    95.044074931760591, 35.22014144395007), point1=(98.164129981728237, 
    35.22014144395007))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-88', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-88'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-88')
mdb.models['Model-1'].materials['Part-88'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-88', name=
    'Part-88', thickness=None)
mdb.models['Model-1'].parts['Part-88'].Set(faces=
    mdb.models['Model-1'].parts['Part-88'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-88'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-88'].sets['Set-1'], sectionName='Part-88'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    65.012322155254438, 80.687896748628688), point1=(68.848438971362555, 
    80.687896748628688))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-89', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-89'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-89')
mdb.models['Model-1'].materials['Part-89'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-89', name=
    'Part-89', thickness=None)
mdb.models['Model-1'].parts['Part-89'].Set(faces=
    mdb.models['Model-1'].parts['Part-89'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-89'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-89'].sets['Set-1'], sectionName='Part-89'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    30.765478097944825, 79.783301685235543), point1=(33.907014480495768, 
    79.783301685235543))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-90', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-90'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-90')
mdb.models['Model-1'].materials['Part-90'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-90', name=
    'Part-90', thickness=None)
mdb.models['Model-1'].parts['Part-90'].Set(faces=
    mdb.models['Model-1'].parts['Part-90'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-90'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-90'].sets['Set-1'], sectionName='Part-90'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    67.123050339538523, 31.552103183857593), point1=(70.163704701153478, 
    31.552103183857593))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-91', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-91'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-91')
mdb.models['Model-1'].materials['Part-91'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-91', name=
    'Part-91', thickness=None)
mdb.models['Model-1'].parts['Part-91'].Set(faces=
    mdb.models['Model-1'].parts['Part-91'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-91'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-91'].sets['Set-1'], sectionName='Part-91'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    17.231986862188407, 19.520034931828995), point1=(21.218182218288099, 
    19.520034931828995))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-92', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-92'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-92')
mdb.models['Model-1'].materials['Part-92'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-92', name=
    'Part-92', thickness=None)
mdb.models['Model-1'].parts['Part-92'].Set(faces=
    mdb.models['Model-1'].parts['Part-92'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-92'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-92'].sets['Set-1'], sectionName='Part-92'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    60.841653101855499, 70.962340484792662), point1=(64.171574117069113, 
    70.962340484792662))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-93', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-93'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-93')
mdb.models['Model-1'].materials['Part-93'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-93', name=
    'Part-93', thickness=None)
mdb.models['Model-1'].parts['Part-93'].Set(faces=
    mdb.models['Model-1'].parts['Part-93'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-93'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-93'].sets['Set-1'], sectionName='Part-93'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    143.90398171349366, 144.19044203961849), point1=(148.26373072330881, 
    144.19044203961849))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-94', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-94'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-94')
mdb.models['Model-1'].materials['Part-94'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-94', name=
    'Part-94', thickness=None)
mdb.models['Model-1'].parts['Part-94'].Set(faces=
    mdb.models['Model-1'].parts['Part-94'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-94'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-94'].sets['Set-1'], sectionName='Part-94'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    124.77555626439661, 37.890268678308473), point1=(128.73732943489495, 
    37.890268678308473))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-95', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-95'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-95')
mdb.models['Model-1'].materials['Part-95'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-95', name=
    'Part-95', thickness=None)
mdb.models['Model-1'].parts['Part-95'].Set(faces=
    mdb.models['Model-1'].parts['Part-95'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-95'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-95'].sets['Set-1'], sectionName='Part-95'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    59.864629588827917, 145.76696622249796), point1=(63.31371234873518, 
    145.76696622249796))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-96', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-96'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-96')
mdb.models['Model-1'].materials['Part-96'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-96', name=
    'Part-96', thickness=None)
mdb.models['Model-1'].parts['Part-96'].Set(faces=
    mdb.models['Model-1'].parts['Part-96'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-96'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-96'].sets['Set-1'], sectionName='Part-96'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    3.0351763528195628, 42.274557633379906), point1=(6.0362877293417441, 
    42.274557633379906))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-97', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-97'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-97')
mdb.models['Model-1'].materials['Part-97'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-97', name=
    'Part-97', thickness=None)
mdb.models['Model-1'].parts['Part-97'].Set(faces=
    mdb.models['Model-1'].parts['Part-97'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-97'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-97'].sets['Set-1'], sectionName='Part-97'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    7.1794299878524761, 132.92153216723747), point1=(11.507009708065709, 
    132.92153216723747))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-98', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-98'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-98')
mdb.models['Model-1'].materials['Part-98'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-98', name=
    'Part-98', thickness=None)
mdb.models['Model-1'].parts['Part-98'].Set(faces=
    mdb.models['Model-1'].parts['Part-98'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-98'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-98'].sets['Set-1'], sectionName='Part-98'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    36.940087906318084, 145.97889435681014), point1=(40.687281692030481, 
    145.97889435681014))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-99', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-99'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-99')
mdb.models['Model-1'].materials['Part-99'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-99', name=
    'Part-99', thickness=None)
mdb.models['Model-1'].parts['Part-99'].Set(faces=
    mdb.models['Model-1'].parts['Part-99'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-99'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-99'].sets['Set-1'], sectionName='Part-99'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    4.0543571148167477, 114.39995062292822), point1=(7.6899238174755586, 
    114.39995062292822))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-100', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-100'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-100')
mdb.models['Model-1'].materials['Part-100'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-100', name=
    'Part-100', thickness=None)
mdb.models['Model-1'].parts['Part-100'].Set(faces=
    mdb.models['Model-1'].parts['Part-100'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-100'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-100'].sets['Set-1'], sectionName=
    'Part-100', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    4.8948524118748393, 67.654660105526474), point1=(9.333402341572576, 
    67.654660105526474))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-101', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-101'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-101')
mdb.models['Model-1'].materials['Part-101'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-101', name=
    'Part-101', thickness=None)
mdb.models['Model-1'].parts['Part-101'].Set(faces=
    mdb.models['Model-1'].parts['Part-101'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-101'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-101'].sets['Set-1'], sectionName=
    'Part-101', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    105.90106687859944, 138.85891304342391), point1=(109.07798341867692, 
    138.85891304342391))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-102', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-102'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-102')
mdb.models['Model-1'].materials['Part-102'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-102', name=
    'Part-102', thickness=None)
mdb.models['Model-1'].parts['Part-102'].Set(faces=
    mdb.models['Model-1'].parts['Part-102'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-102'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-102'].sets['Set-1'], sectionName=
    'Part-102', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    82.49713912795508, 7.1443803481099968), point1=(85.638457896904455, 
    7.1443803481099968))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-103', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-103'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-103')
mdb.models['Model-1'].materials['Part-103'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-103', name=
    'Part-103', thickness=None)
mdb.models['Model-1'].parts['Part-103'].Set(faces=
    mdb.models['Model-1'].parts['Part-103'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-103'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-103'].sets['Set-1'], sectionName=
    'Part-103', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    70.290357150851989, 65.589169763148476), point1=(74.510252622268325, 
    65.589169763148476))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-104', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-104'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-104')
mdb.models['Model-1'].materials['Part-104'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-104', name=
    'Part-104', thickness=None)
mdb.models['Model-1'].parts['Part-104'].Set(faces=
    mdb.models['Model-1'].parts['Part-104'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-104'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-104'].sets['Set-1'], sectionName=
    'Part-104', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    132.78213782471096, 92.370654587369131), point1=(136.30984165355656, 
    92.370654587369131))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-105', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-105'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-105')
mdb.models['Model-1'].materials['Part-105'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-105', name=
    'Part-105', thickness=None)
mdb.models['Model-1'].parts['Part-105'].Set(faces=
    mdb.models['Model-1'].parts['Part-105'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-105'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-105'].sets['Set-1'], sectionName=
    'Part-105', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    28.586324051965402, 100.17807549435673), point1=(32.472627991614104, 
    100.17807549435673))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-106', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-106'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-106')
mdb.models['Model-1'].materials['Part-106'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-106', name=
    'Part-106', thickness=None)
mdb.models['Model-1'].parts['Part-106'].Set(faces=
    mdb.models['Model-1'].parts['Part-106'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-106'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-106'].sets['Set-1'], sectionName=
    'Part-106', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    142.79195450410401, 107.62172508204984), point1=(146.6722610678159, 
    107.62172508204984))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-107', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-107'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-107')
mdb.models['Model-1'].materials['Part-107'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-107', name=
    'Part-107', thickness=None)
mdb.models['Model-1'].parts['Part-107'].Set(faces=
    mdb.models['Model-1'].parts['Part-107'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-107'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-107'].sets['Set-1'], sectionName=
    'Part-107', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    73.098557886488209, 143.48989792638807), point1=(77.415081281411403, 
    143.48989792638807))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-108', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-108'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-108')
mdb.models['Model-1'].materials['Part-108'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-108', name=
    'Part-108', thickness=None)
mdb.models['Model-1'].parts['Part-108'].Set(faces=
    mdb.models['Model-1'].parts['Part-108'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-108'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-108'].sets['Set-1'], sectionName=
    'Part-108', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    89.714255265034851, 128.13289132519725), point1=(93.166073164022364, 
    128.13289132519725))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-109', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-109'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-109')
mdb.models['Model-1'].materials['Part-109'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-109', name=
    'Part-109', thickness=None)
mdb.models['Model-1'].parts['Part-109'].Set(faces=
    mdb.models['Model-1'].parts['Part-109'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-109'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-109'].sets['Set-1'], sectionName=
    'Part-109', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    128.50163812252023, 81.604198505164206), point1=(131.56294571742188, 
    81.604198505164206))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-110', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-110'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-110')
mdb.models['Model-1'].materials['Part-110'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-110', name=
    'Part-110', thickness=None)
mdb.models['Model-1'].parts['Part-110'].Set(faces=
    mdb.models['Model-1'].parts['Part-110'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-110'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-110'].sets['Set-1'], sectionName=
    'Part-110', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    58.90226980358694, 36.174452168565495), point1=(62.674779891304155, 
    36.174452168565495))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-111', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-111'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-111')
mdb.models['Model-1'].materials['Part-111'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-111', name=
    'Part-111', thickness=None)
mdb.models['Model-1'].parts['Part-111'].Set(faces=
    mdb.models['Model-1'].parts['Part-111'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-111'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-111'].sets['Set-1'], sectionName=
    'Part-111', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    20.321527952172829, 27.895492933246945), point1=(24.436365103606246, 
    27.895492933246945))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-112', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-112'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-112')
mdb.models['Model-1'].materials['Part-112'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-112', name=
    'Part-112', thickness=None)
mdb.models['Model-1'].parts['Part-112'].Set(faces=
    mdb.models['Model-1'].parts['Part-112'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-112'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-112'].sets['Set-1'], sectionName=
    'Part-112', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    114.24773443163392, 87.085762012633751), point1=(117.51198171002127, 
    87.085762012633751))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-113', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-113'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-113')
mdb.models['Model-1'].materials['Part-113'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-113', name=
    'Part-113', thickness=None)
mdb.models['Model-1'].parts['Part-113'].Set(faces=
    mdb.models['Model-1'].parts['Part-113'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-113'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-113'].sets['Set-1'], sectionName=
    'Part-113', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    3.9536664275166888, 5.7997177630752965), point1=(6.9929340485246172, 
    5.7997177630752965))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-114', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-114'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-114')
mdb.models['Model-1'].materials['Part-114'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-114', name=
    'Part-114', thickness=None)
mdb.models['Model-1'].parts['Part-114'].Set(faces=
    mdb.models['Model-1'].parts['Part-114'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-114'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-114'].sets['Set-1'], sectionName=
    'Part-114', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    21.248733515234747, 105.1310489923117), point1=(24.942904422971129, 
    105.1310489923117))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-115', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-115'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-115')
mdb.models['Model-1'].materials['Part-115'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-115', name=
    'Part-115', thickness=None)
mdb.models['Model-1'].parts['Part-115'].Set(faces=
    mdb.models['Model-1'].parts['Part-115'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-115'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-115'].sets['Set-1'], sectionName=
    'Part-115', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    102.04851292800949, 116.1939242003898), point1=(106.20786050095882, 
    116.1939242003898))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-116', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-116'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-116')
mdb.models['Model-1'].materials['Part-116'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-116', name=
    'Part-116', thickness=None)
mdb.models['Model-1'].parts['Part-116'].Set(faces=
    mdb.models['Model-1'].parts['Part-116'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-116'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-116'].sets['Set-1'], sectionName=
    'Part-116', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    146.12475236813998, 5.544780834386648), point1=(149.13283994695513, 
    5.544780834386648))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-117', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-117'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-117')
mdb.models['Model-1'].materials['Part-117'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-117', name=
    'Part-117', thickness=None)
mdb.models['Model-1'].parts['Part-117'].Set(faces=
    mdb.models['Model-1'].parts['Part-117'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-117'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-117'].sets['Set-1'], sectionName=
    'Part-117', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    126.2551367856455, 4.5593931993778982), point1=(130.10237505826672, 
    4.5593931993778982))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-118', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-118'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-118')
mdb.models['Model-1'].materials['Part-118'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-118', name=
    'Part-118', thickness=None)
mdb.models['Model-1'].parts['Part-118'].Set(faces=
    mdb.models['Model-1'].parts['Part-118'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-118'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-118'].sets['Set-1'], sectionName=
    'Part-118', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    137.97487112865863, 4.7768728845591131), point1=(142.36279493318409, 
    4.7768728845591131))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-119', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-119'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-119')
mdb.models['Model-1'].materials['Part-119'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-119', name=
    'Part-119', thickness=None)
mdb.models['Model-1'].parts['Part-119'].Set(faces=
    mdb.models['Model-1'].parts['Part-119'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-119'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-119'].sets['Set-1'], sectionName=
    'Part-119', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    144.4997822638627, 99.513970581787774), point1=(147.62434075808977, 
    99.513970581787774))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-120', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-120'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-120')
mdb.models['Model-1'].materials['Part-120'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-120', name=
    'Part-120', thickness=None)
mdb.models['Model-1'].parts['Part-120'].Set(faces=
    mdb.models['Model-1'].parts['Part-120'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-120'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-120'].sets['Set-1'], sectionName=
    'Part-120', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    126.73102252637925, 45.087367294301686), point1=(129.7466956067837, 
    45.087367294301686))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-121', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-121'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-121')
mdb.models['Model-1'].materials['Part-121'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-121', name=
    'Part-121', thickness=None)
mdb.models['Model-1'].parts['Part-121'].Set(faces=
    mdb.models['Model-1'].parts['Part-121'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-121'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-121'].sets['Set-1'], sectionName=
    'Part-121', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    6.2116597641379778, 140.46392470354741), point1=(9.3299174909044886, 
    140.46392470354741))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-122', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-122'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-122')
mdb.models['Model-1'].materials['Part-122'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-122', name=
    'Part-122', thickness=None)
mdb.models['Model-1'].parts['Part-122'].Set(faces=
    mdb.models['Model-1'].parts['Part-122'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-122'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-122'].sets['Set-1'], sectionName=
    'Part-122', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    19.407015771372134, 133.45732147667687), point1=(22.976671798016458, 
    133.45732147667687))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-123', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-123'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-123')
mdb.models['Model-1'].materials['Part-123'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-123', name=
    'Part-123', thickness=None)
mdb.models['Model-1'].parts['Part-123'].Set(faces=
    mdb.models['Model-1'].parts['Part-123'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-123'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-123'].sets['Set-1'], sectionName=
    'Part-123', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    50.594887524461221, 32.940275349010562), point1=(53.605352882176852, 
    32.940275349010562))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-124', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-124'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-124')
mdb.models['Model-1'].materials['Part-124'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-124', name=
    'Part-124', thickness=None)
mdb.models['Model-1'].parts['Part-124'].Set(faces=
    mdb.models['Model-1'].parts['Part-124'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-124'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-124'].sets['Set-1'], sectionName=
    'Part-124', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=150.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    97.739360718107008, 124.40905464287694), point1=(101.32708978781099, 
    124.40905464287694))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-125', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-125'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Part-125')
mdb.models['Model-1'].materials['Part-125'].Elastic(table=((20000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Part-125', name=
    'Part-125', thickness=None)
mdb.models['Model-1'].parts['Part-125'].Set(faces=
    mdb.models['Model-1'].parts['Part-125'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-125'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-125'].sets['Set-1'], sectionName=
    'Part-125', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].Material(name='MainPart')
mdb.models['Model-1'].materials['MainPart'].Elastic(table=((5000.0, 0.3), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='MainPart', name=
    'MainPart', thickness=None)
mdb.models['Model-1'].parts['MainPart'].Set(faces=
    mdb.models['Model-1'].parts['MainPart'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['MainPart'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['MainPart'].sets['Set-1'], sectionName=
    'MainPart', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='MainPart', 
    part=mdb.models['Model-1'].parts['MainPart'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-0', part=
    mdb.models['Model-1'].parts['Part-0'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-1', part=
    mdb.models['Model-1'].parts['Part-1'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-2', part=
    mdb.models['Model-1'].parts['Part-2'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-3', part=
    mdb.models['Model-1'].parts['Part-3'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-4', part=
    mdb.models['Model-1'].parts['Part-4'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-5', part=
    mdb.models['Model-1'].parts['Part-5'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-6', part=
    mdb.models['Model-1'].parts['Part-6'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-7', part=
    mdb.models['Model-1'].parts['Part-7'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-8', part=
    mdb.models['Model-1'].parts['Part-8'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-9', part=
    mdb.models['Model-1'].parts['Part-9'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-10', part=
    mdb.models['Model-1'].parts['Part-10'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-11', part=
    mdb.models['Model-1'].parts['Part-11'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-12', part=
    mdb.models['Model-1'].parts['Part-12'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-13', part=
    mdb.models['Model-1'].parts['Part-13'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-14', part=
    mdb.models['Model-1'].parts['Part-14'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-15', part=
    mdb.models['Model-1'].parts['Part-15'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-16', part=
    mdb.models['Model-1'].parts['Part-16'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-17', part=
    mdb.models['Model-1'].parts['Part-17'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-18', part=
    mdb.models['Model-1'].parts['Part-18'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-19', part=
    mdb.models['Model-1'].parts['Part-19'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-20', part=
    mdb.models['Model-1'].parts['Part-20'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-21', part=
    mdb.models['Model-1'].parts['Part-21'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-22', part=
    mdb.models['Model-1'].parts['Part-22'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-23', part=
    mdb.models['Model-1'].parts['Part-23'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-24', part=
    mdb.models['Model-1'].parts['Part-24'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-25', part=
    mdb.models['Model-1'].parts['Part-25'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-26', part=
    mdb.models['Model-1'].parts['Part-26'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-27', part=
    mdb.models['Model-1'].parts['Part-27'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-28', part=
    mdb.models['Model-1'].parts['Part-28'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-29', part=
    mdb.models['Model-1'].parts['Part-29'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-30', part=
    mdb.models['Model-1'].parts['Part-30'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-31', part=
    mdb.models['Model-1'].parts['Part-31'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-32', part=
    mdb.models['Model-1'].parts['Part-32'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-33', part=
    mdb.models['Model-1'].parts['Part-33'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-34', part=
    mdb.models['Model-1'].parts['Part-34'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-35', part=
    mdb.models['Model-1'].parts['Part-35'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-36', part=
    mdb.models['Model-1'].parts['Part-36'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-37', part=
    mdb.models['Model-1'].parts['Part-37'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-38', part=
    mdb.models['Model-1'].parts['Part-38'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-39', part=
    mdb.models['Model-1'].parts['Part-39'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-40', part=
    mdb.models['Model-1'].parts['Part-40'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-41', part=
    mdb.models['Model-1'].parts['Part-41'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-42', part=
    mdb.models['Model-1'].parts['Part-42'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-43', part=
    mdb.models['Model-1'].parts['Part-43'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-44', part=
    mdb.models['Model-1'].parts['Part-44'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-45', part=
    mdb.models['Model-1'].parts['Part-45'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-46', part=
    mdb.models['Model-1'].parts['Part-46'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-47', part=
    mdb.models['Model-1'].parts['Part-47'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-48', part=
    mdb.models['Model-1'].parts['Part-48'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-49', part=
    mdb.models['Model-1'].parts['Part-49'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-50', part=
    mdb.models['Model-1'].parts['Part-50'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-51', part=
    mdb.models['Model-1'].parts['Part-51'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-52', part=
    mdb.models['Model-1'].parts['Part-52'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-53', part=
    mdb.models['Model-1'].parts['Part-53'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-54', part=
    mdb.models['Model-1'].parts['Part-54'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-55', part=
    mdb.models['Model-1'].parts['Part-55'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-56', part=
    mdb.models['Model-1'].parts['Part-56'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-57', part=
    mdb.models['Model-1'].parts['Part-57'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-58', part=
    mdb.models['Model-1'].parts['Part-58'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-59', part=
    mdb.models['Model-1'].parts['Part-59'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-60', part=
    mdb.models['Model-1'].parts['Part-60'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-61', part=
    mdb.models['Model-1'].parts['Part-61'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-62', part=
    mdb.models['Model-1'].parts['Part-62'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-63', part=
    mdb.models['Model-1'].parts['Part-63'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-64', part=
    mdb.models['Model-1'].parts['Part-64'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-65', part=
    mdb.models['Model-1'].parts['Part-65'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-66', part=
    mdb.models['Model-1'].parts['Part-66'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-67', part=
    mdb.models['Model-1'].parts['Part-67'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-68', part=
    mdb.models['Model-1'].parts['Part-68'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-69', part=
    mdb.models['Model-1'].parts['Part-69'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-70', part=
    mdb.models['Model-1'].parts['Part-70'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-71', part=
    mdb.models['Model-1'].parts['Part-71'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-72', part=
    mdb.models['Model-1'].parts['Part-72'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-73', part=
    mdb.models['Model-1'].parts['Part-73'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-74', part=
    mdb.models['Model-1'].parts['Part-74'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-75', part=
    mdb.models['Model-1'].parts['Part-75'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-76', part=
    mdb.models['Model-1'].parts['Part-76'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-77', part=
    mdb.models['Model-1'].parts['Part-77'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-78', part=
    mdb.models['Model-1'].parts['Part-78'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-79', part=
    mdb.models['Model-1'].parts['Part-79'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-80', part=
    mdb.models['Model-1'].parts['Part-80'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-81', part=
    mdb.models['Model-1'].parts['Part-81'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-82', part=
    mdb.models['Model-1'].parts['Part-82'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-83', part=
    mdb.models['Model-1'].parts['Part-83'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-84', part=
    mdb.models['Model-1'].parts['Part-84'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-85', part=
    mdb.models['Model-1'].parts['Part-85'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-86', part=
    mdb.models['Model-1'].parts['Part-86'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-87', part=
    mdb.models['Model-1'].parts['Part-87'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-88', part=
    mdb.models['Model-1'].parts['Part-88'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-89', part=
    mdb.models['Model-1'].parts['Part-89'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-90', part=
    mdb.models['Model-1'].parts['Part-90'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-91', part=
    mdb.models['Model-1'].parts['Part-91'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-92', part=
    mdb.models['Model-1'].parts['Part-92'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-93', part=
    mdb.models['Model-1'].parts['Part-93'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-94', part=
    mdb.models['Model-1'].parts['Part-94'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-95', part=
    mdb.models['Model-1'].parts['Part-95'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-96', part=
    mdb.models['Model-1'].parts['Part-96'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-97', part=
    mdb.models['Model-1'].parts['Part-97'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-98', part=
    mdb.models['Model-1'].parts['Part-98'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-99', part=
    mdb.models['Model-1'].parts['Part-99'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-100', 
    part=mdb.models['Model-1'].parts['Part-100'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-101', 
    part=mdb.models['Model-1'].parts['Part-101'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-102', 
    part=mdb.models['Model-1'].parts['Part-102'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-103', 
    part=mdb.models['Model-1'].parts['Part-103'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-104', 
    part=mdb.models['Model-1'].parts['Part-104'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-105', 
    part=mdb.models['Model-1'].parts['Part-105'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-106', 
    part=mdb.models['Model-1'].parts['Part-106'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-107', 
    part=mdb.models['Model-1'].parts['Part-107'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-108', 
    part=mdb.models['Model-1'].parts['Part-108'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-109', 
    part=mdb.models['Model-1'].parts['Part-109'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-110', 
    part=mdb.models['Model-1'].parts['Part-110'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-111', 
    part=mdb.models['Model-1'].parts['Part-111'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-112', 
    part=mdb.models['Model-1'].parts['Part-112'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-113', 
    part=mdb.models['Model-1'].parts['Part-113'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-114', 
    part=mdb.models['Model-1'].parts['Part-114'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-115', 
    part=mdb.models['Model-1'].parts['Part-115'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-116', 
    part=mdb.models['Model-1'].parts['Part-116'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-117', 
    part=mdb.models['Model-1'].parts['Part-117'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-118', 
    part=mdb.models['Model-1'].parts['Part-118'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-119', 
    part=mdb.models['Model-1'].parts['Part-119'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-120', 
    part=mdb.models['Model-1'].parts['Part-120'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-121', 
    part=mdb.models['Model-1'].parts['Part-121'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-122', 
    part=mdb.models['Model-1'].parts['Part-122'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-123', 
    part=mdb.models['Model-1'].parts['Part-123'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-124', 
    part=mdb.models['Model-1'].parts['Part-124'])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Part-125', 
    part=mdb.models['Model-1'].parts['Part-125'])
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart0', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#2 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-00', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-0'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart0'], name=
    'Constraint-MainPart0', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-00'], thickness=ON
    , tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart1', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#4 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-11', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-1'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart1'], name=
    'Constraint-MainPart1', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-11'], thickness=ON
    , tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart2', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#8 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-22', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-2'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart2'], name=
    'Constraint-MainPart2', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-22'], thickness=ON
    , tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart3', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#10 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-33', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-3'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart3'], name=
    'Constraint-MainPart3', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-33'], thickness=ON
    , tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart4', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#20 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-44', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-4'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart4'], name=
    'Constraint-MainPart4', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-44'], thickness=ON
    , tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart5', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#40 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-55', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-5'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart5'], name=
    'Constraint-MainPart5', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-55'], thickness=ON
    , tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart6', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#80 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-66', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-6'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart6'], name=
    'Constraint-MainPart6', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-66'], thickness=ON
    , tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart7', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#100 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-77', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-7'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart7'], name=
    'Constraint-MainPart7', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-77'], thickness=ON
    , tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart8', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#200 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-88', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-8'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart8'], name=
    'Constraint-MainPart8', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-88'], thickness=ON
    , tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart9', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#400 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-99', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-9'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart9'], name=
    'Constraint-MainPart9', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-99'], thickness=ON
    , tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart10', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#800 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-1010', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-10'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart10'], name=
    'Constraint-MainPart10', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-1010'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart11', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#1000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-1111', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-11'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart11'], name=
    'Constraint-MainPart11', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-1111'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart12', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#2000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-1212', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-12'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart12'], name=
    'Constraint-MainPart12', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-1212'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart13', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#4000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-1313', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-13'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart13'], name=
    'Constraint-MainPart13', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-1313'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart14', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#8000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-1414', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-14'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart14'], name=
    'Constraint-MainPart14', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-1414'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart15', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#10000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-1515', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-15'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart15'], name=
    'Constraint-MainPart15', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-1515'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart16', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#20000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-1616', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-16'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart16'], name=
    'Constraint-MainPart16', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-1616'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart17', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#40000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-1717', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-17'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart17'], name=
    'Constraint-MainPart17', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-1717'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart18', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#80000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-1818', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-18'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart18'], name=
    'Constraint-MainPart18', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-1818'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart19', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#100000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-1919', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-19'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart19'], name=
    'Constraint-MainPart19', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-1919'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart20', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#200000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-2020', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-20'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart20'], name=
    'Constraint-MainPart20', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-2020'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart21', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#400000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-2121', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-21'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart21'], name=
    'Constraint-MainPart21', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-2121'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart22', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#800000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-2222', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-22'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart22'], name=
    'Constraint-MainPart22', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-2222'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart23', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#1000000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-2323', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-23'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart23'], name=
    'Constraint-MainPart23', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-2323'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart24', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#2000000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-2424', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-24'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart24'], name=
    'Constraint-MainPart24', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-2424'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart25', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#4000000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-2525', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-25'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart25'], name=
    'Constraint-MainPart25', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-2525'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart26', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#8000000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-2626', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-26'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart26'], name=
    'Constraint-MainPart26', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-2626'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart27', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#10000000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-2727', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-27'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart27'], name=
    'Constraint-MainPart27', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-2727'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart28', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#20000000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-2828', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-28'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart28'], name=
    'Constraint-MainPart28', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-2828'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart29', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#40000000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-2929', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-29'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart29'], name=
    'Constraint-MainPart29', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-2929'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart30', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#80000000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-3030', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-30'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart30'], name=
    'Constraint-MainPart30', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-3030'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart31', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0 #1 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-3131', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-31'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart31'], name=
    'Constraint-MainPart31', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-3131'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart32', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0 #2 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-3232', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-32'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart32'], name=
    'Constraint-MainPart32', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-3232'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart33', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0 #4 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-3333', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-33'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart33'], name=
    'Constraint-MainPart33', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-3333'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart34', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0 #8 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-3434', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-34'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart34'], name=
    'Constraint-MainPart34', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-3434'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart35', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0 #10 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-3535', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-35'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart35'], name=
    'Constraint-MainPart35', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-3535'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart36', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0 #20 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-3636', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-36'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart36'], name=
    'Constraint-MainPart36', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-3636'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart37', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0 #40 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-3737', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-37'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart37'], name=
    'Constraint-MainPart37', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-3737'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart38', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0 #80 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-3838', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-38'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart38'], name=
    'Constraint-MainPart38', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-3838'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart39', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0 #100 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-3939', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-39'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart39'], name=
    'Constraint-MainPart39', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-3939'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart40', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0 #200 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-4040', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-40'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart40'], name=
    'Constraint-MainPart40', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-4040'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart41', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0 #400 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-4141', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-41'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart41'], name=
    'Constraint-MainPart41', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-4141'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart42', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0 #800 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-4242', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-42'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart42'], name=
    'Constraint-MainPart42', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-4242'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart43', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0 #1000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-4343', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-43'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart43'], name=
    'Constraint-MainPart43', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-4343'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart44', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0 #2000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-4444', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-44'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart44'], name=
    'Constraint-MainPart44', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-4444'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart45', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0 #4000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-4545', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-45'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart45'], name=
    'Constraint-MainPart45', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-4545'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart46', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0 #8000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-4646', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-46'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart46'], name=
    'Constraint-MainPart46', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-4646'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart47', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0 #10000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-4747', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-47'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart47'], name=
    'Constraint-MainPart47', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-4747'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart48', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0 #20000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-4848', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-48'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart48'], name=
    'Constraint-MainPart48', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-4848'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart49', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0 #40000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-4949', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-49'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart49'], name=
    'Constraint-MainPart49', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-4949'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart50', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0 #80000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-5050', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-50'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart50'], name=
    'Constraint-MainPart50', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-5050'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart51', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0 #100000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-5151', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-51'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart51'], name=
    'Constraint-MainPart51', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-5151'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart52', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0 #200000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-5252', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-52'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart52'], name=
    'Constraint-MainPart52', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-5252'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart53', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0 #400000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-5353', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-53'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart53'], name=
    'Constraint-MainPart53', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-5353'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart54', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0 #800000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-5454', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-54'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart54'], name=
    'Constraint-MainPart54', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-5454'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart55', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0 #1000000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-5555', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-55'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart55'], name=
    'Constraint-MainPart55', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-5555'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart56', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0 #2000000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-5656', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-56'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart56'], name=
    'Constraint-MainPart56', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-5656'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart57', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0 #4000000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-5757', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-57'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart57'], name=
    'Constraint-MainPart57', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-5757'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart58', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0 #8000000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-5858', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-58'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart58'], name=
    'Constraint-MainPart58', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-5858'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart59', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0 #10000000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-5959', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-59'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart59'], name=
    'Constraint-MainPart59', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-5959'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart60', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0 #20000000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-6060', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-60'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart60'], name=
    'Constraint-MainPart60', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-6060'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart61', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0 #40000000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-6161', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-61'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart61'], name=
    'Constraint-MainPart61', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-6161'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart62', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0 #80000000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-6262', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-62'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart62'], name=
    'Constraint-MainPart62', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-6262'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart63', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #1 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-6363', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-63'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart63'], name=
    'Constraint-MainPart63', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-6363'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart64', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #2 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-6464', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-64'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart64'], name=
    'Constraint-MainPart64', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-6464'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart65', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #4 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-6565', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-65'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart65'], name=
    'Constraint-MainPart65', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-6565'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart66', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #8 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-6666', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-66'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart66'], name=
    'Constraint-MainPart66', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-6666'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart67', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #10 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-6767', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-67'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart67'], name=
    'Constraint-MainPart67', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-6767'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart68', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #20 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-6868', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-68'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart68'], name=
    'Constraint-MainPart68', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-6868'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart69', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #40 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-6969', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-69'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart69'], name=
    'Constraint-MainPart69', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-6969'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart70', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #80 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-7070', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-70'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart70'], name=
    'Constraint-MainPart70', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-7070'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart71', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #100 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-7171', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-71'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart71'], name=
    'Constraint-MainPart71', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-7171'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart72', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #200 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-7272', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-72'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart72'], name=
    'Constraint-MainPart72', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-7272'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart73', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #400 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-7373', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-73'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart73'], name=
    'Constraint-MainPart73', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-7373'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart74', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #800 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-7474', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-74'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart74'], name=
    'Constraint-MainPart74', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-7474'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart75', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #1000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-7575', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-75'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart75'], name=
    'Constraint-MainPart75', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-7575'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart76', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #2000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-7676', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-76'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart76'], name=
    'Constraint-MainPart76', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-7676'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart77', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #4000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-7777', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-77'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart77'], name=
    'Constraint-MainPart77', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-7777'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart78', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #8000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-7878', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-78'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart78'], name=
    'Constraint-MainPart78', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-7878'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart79', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #10000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-7979', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-79'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart79'], name=
    'Constraint-MainPart79', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-7979'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart80', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #20000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-8080', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-80'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart80'], name=
    'Constraint-MainPart80', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-8080'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart81', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #40000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-8181', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-81'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart81'], name=
    'Constraint-MainPart81', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-8181'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart82', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #80000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-8282', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-82'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart82'], name=
    'Constraint-MainPart82', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-8282'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart83', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #100000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-8383', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-83'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart83'], name=
    'Constraint-MainPart83', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-8383'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart84', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #200000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-8484', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-84'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart84'], name=
    'Constraint-MainPart84', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-8484'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart85', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #400000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-8585', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-85'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart85'], name=
    'Constraint-MainPart85', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-8585'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart86', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #800000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-8686', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-86'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart86'], name=
    'Constraint-MainPart86', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-8686'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart87', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #1000000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-8787', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-87'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart87'], name=
    'Constraint-MainPart87', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-8787'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart88', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #2000000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-8888', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-88'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart88'], name=
    'Constraint-MainPart88', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-8888'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart89', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #4000000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-8989', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-89'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart89'], name=
    'Constraint-MainPart89', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-8989'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart90', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #8000000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-9090', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-90'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart90'], name=
    'Constraint-MainPart90', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-9090'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart91', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #10000000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-9191', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-91'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart91'], name=
    'Constraint-MainPart91', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-9191'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart92', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #20000000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-9292', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-92'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart92'], name=
    'Constraint-MainPart92', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-9292'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart93', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #40000000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-9393', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-93'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart93'], name=
    'Constraint-MainPart93', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-9393'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart94', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:2 #80000000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-9494', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-94'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart94'], name=
    'Constraint-MainPart94', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-9494'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart95', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #1 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-9595', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-95'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart95'], name=
    'Constraint-MainPart95', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-9595'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart96', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #2 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-9696', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-96'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart96'], name=
    'Constraint-MainPart96', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-9696'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart97', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #4 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-9797', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-97'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart97'], name=
    'Constraint-MainPart97', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-9797'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart98', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #8 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-9898', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-98'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart98'], name=
    'Constraint-MainPart98', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-9898'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart99', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #10 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-9999', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-99'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart99'], name=
    'Constraint-MainPart99', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-9999'], thickness=
    ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart100', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #20 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-100100', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-100'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart100'], name=
    'Constraint-MainPart100', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-100100'], 
    thickness=ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart101', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #40 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-101101', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-101'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart101'], name=
    'Constraint-MainPart101', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-101101'], 
    thickness=ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart102', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #80 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-102102', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-102'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart102'], name=
    'Constraint-MainPart102', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-102102'], 
    thickness=ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart103', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #100 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-103103', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-103'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart103'], name=
    'Constraint-MainPart103', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-103103'], 
    thickness=ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart104', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #200 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-104104', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-104'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart104'], name=
    'Constraint-MainPart104', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-104104'], 
    thickness=ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart105', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #400 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-105105', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-105'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart105'], name=
    'Constraint-MainPart105', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-105105'], 
    thickness=ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart106', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #800 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-106106', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-106'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart106'], name=
    'Constraint-MainPart106', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-106106'], 
    thickness=ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart107', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #1000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-107107', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-107'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart107'], name=
    'Constraint-MainPart107', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-107107'], 
    thickness=ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart108', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #2000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-108108', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-108'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart108'], name=
    'Constraint-MainPart108', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-108108'], 
    thickness=ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart109', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #4000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-109109', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-109'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart109'], name=
    'Constraint-MainPart109', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-109109'], 
    thickness=ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart110', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #8000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-110110', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-110'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart110'], name=
    'Constraint-MainPart110', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-110110'], 
    thickness=ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart111', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #10000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-111111', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-111'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart111'], name=
    'Constraint-MainPart111', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-111111'], 
    thickness=ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart112', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #20000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-112112', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-112'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart112'], name=
    'Constraint-MainPart112', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-112112'], 
    thickness=ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart113', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #40000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-113113', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-113'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart113'], name=
    'Constraint-MainPart113', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-113113'], 
    thickness=ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart114', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #80000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-114114', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-114'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart114'], name=
    'Constraint-MainPart114', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-114114'], 
    thickness=ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart115', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #100000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-115115', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-115'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart115'], name=
    'Constraint-MainPart115', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-115115'], 
    thickness=ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart116', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #200000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-116116', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-116'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart116'], name=
    'Constraint-MainPart116', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-116116'], 
    thickness=ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart117', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #400000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-117117', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-117'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart117'], name=
    'Constraint-MainPart117', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-117117'], 
    thickness=ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart118', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #800000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-118118', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-118'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart118'], name=
    'Constraint-MainPart118', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-118118'], 
    thickness=ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart119', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #1000000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-119119', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-119'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart119'], name=
    'Constraint-MainPart119', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-119119'], 
    thickness=ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart120', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #2000000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-120120', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-120'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart120'], name=
    'Constraint-MainPart120', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-120120'], 
    thickness=ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart121', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #4000000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-121121', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-121'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart121'], name=
    'Constraint-MainPart121', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-121121'], 
    thickness=ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart122', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #8000000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-122122', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-122'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart122'], name=
    'Constraint-MainPart122', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-122122'], 
    thickness=ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart123', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #10000000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-123123', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-123'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart123'], name=
    'Constraint-MainPart123', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-123123'], 
    thickness=ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart124', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #20000000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-124124', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-124'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart124'], name=
    'Constraint-MainPart124', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-124124'], 
    thickness=ON, tieRotations=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-MainPart125', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-Part-125125', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-125'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-MainPart125'], name=
    'Constraint-MainPart125', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-Part-125125'], 
    thickness=ON, tieRotations=ON)
mdb.models['Model-1'].StaticStep(name='Step-1', previous='Initial')
mdb.models['Model-1'].rootAssembly.Surface(name='Surf-1', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:4 #1 ]', ), ))
mdb.models['Model-1'].Pressure(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, field='', magnitude=0.1, name='Load-1', region=
    mdb.models['Model-1'].rootAssembly.surfaces['Surf-1'])
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['MainPart'].edges.getSequenceFromMask(
    mask=('[#0:3 #40000000 ]', ), ), name='Set-1')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Initial', 
    distributionType=UNIFORM, fieldName='', localCsys=None, name='BC-1', 
    region=mdb.models['Model-1'].rootAssembly.sets['Set-1'], u1=SET, u2=SET, 
    ur3=UNSET)
mdb.models['Model-1'].parts['MainPart'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['MainPart'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['MainPart'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['MainPart'].generateMesh()
mdb.models['Model-1'].parts['Part-0'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-0'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-0'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-0'].generateMesh()
mdb.models['Model-1'].parts['Part-1'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-1'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-1'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-1'].generateMesh()
mdb.models['Model-1'].parts['Part-2'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-2'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-2'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-2'].generateMesh()
mdb.models['Model-1'].parts['Part-3'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-3'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-3'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-3'].generateMesh()
mdb.models['Model-1'].parts['Part-4'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-4'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-4'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-4'].generateMesh()
mdb.models['Model-1'].parts['Part-5'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-5'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-5'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-5'].generateMesh()
mdb.models['Model-1'].parts['Part-6'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-6'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-6'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-6'].generateMesh()
mdb.models['Model-1'].parts['Part-7'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-7'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-7'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-7'].generateMesh()
mdb.models['Model-1'].parts['Part-8'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-8'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-8'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-8'].generateMesh()
mdb.models['Model-1'].parts['Part-9'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-9'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-9'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-9'].generateMesh()
mdb.models['Model-1'].parts['Part-10'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-10'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-10'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-10'].generateMesh()
mdb.models['Model-1'].parts['Part-11'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-11'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-11'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-11'].generateMesh()
mdb.models['Model-1'].parts['Part-12'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-12'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-12'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-12'].generateMesh()
mdb.models['Model-1'].parts['Part-13'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-13'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-13'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-13'].generateMesh()
mdb.models['Model-1'].parts['Part-14'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-14'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-14'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-14'].generateMesh()
mdb.models['Model-1'].parts['Part-15'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-15'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-15'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-15'].generateMesh()
mdb.models['Model-1'].parts['Part-16'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-16'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-16'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-16'].generateMesh()
mdb.models['Model-1'].parts['Part-17'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-17'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-17'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-17'].generateMesh()
mdb.models['Model-1'].parts['Part-18'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-18'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-18'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-18'].generateMesh()
mdb.models['Model-1'].parts['Part-19'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-19'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-19'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-19'].generateMesh()
mdb.models['Model-1'].parts['Part-20'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-20'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-20'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-20'].generateMesh()
mdb.models['Model-1'].parts['Part-21'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-21'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-21'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-21'].generateMesh()
mdb.models['Model-1'].parts['Part-22'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-22'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-22'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-22'].generateMesh()
mdb.models['Model-1'].parts['Part-23'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-23'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-23'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-23'].generateMesh()
mdb.models['Model-1'].parts['Part-24'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-24'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-24'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-24'].generateMesh()
mdb.models['Model-1'].parts['Part-25'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-25'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-25'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-25'].generateMesh()
mdb.models['Model-1'].parts['Part-26'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-26'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-26'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-26'].generateMesh()
mdb.models['Model-1'].parts['Part-27'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-27'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-27'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-27'].generateMesh()
mdb.models['Model-1'].parts['Part-28'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-28'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-28'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-28'].generateMesh()
mdb.models['Model-1'].parts['Part-29'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-29'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-29'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-29'].generateMesh()
mdb.models['Model-1'].parts['Part-30'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-30'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-30'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-30'].generateMesh()
mdb.models['Model-1'].parts['Part-31'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-31'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-31'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-31'].generateMesh()
mdb.models['Model-1'].parts['Part-32'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-32'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-32'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-32'].generateMesh()
mdb.models['Model-1'].parts['Part-33'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-33'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-33'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-33'].generateMesh()
mdb.models['Model-1'].parts['Part-34'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-34'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-34'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-34'].generateMesh()
mdb.models['Model-1'].parts['Part-35'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-35'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-35'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-35'].generateMesh()
mdb.models['Model-1'].parts['Part-36'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-36'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-36'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-36'].generateMesh()
mdb.models['Model-1'].parts['Part-37'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-37'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-37'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-37'].generateMesh()
mdb.models['Model-1'].parts['Part-38'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-38'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-38'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-38'].generateMesh()
mdb.models['Model-1'].parts['Part-39'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-39'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-39'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-39'].generateMesh()
mdb.models['Model-1'].parts['Part-40'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-40'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-40'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-40'].generateMesh()
mdb.models['Model-1'].parts['Part-41'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-41'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-41'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-41'].generateMesh()
mdb.models['Model-1'].parts['Part-42'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-42'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-42'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-42'].generateMesh()
mdb.models['Model-1'].parts['Part-43'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-43'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-43'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-43'].generateMesh()
mdb.models['Model-1'].parts['Part-44'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-44'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-44'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-44'].generateMesh()
mdb.models['Model-1'].parts['Part-45'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-45'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-45'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-45'].generateMesh()
mdb.models['Model-1'].parts['Part-46'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-46'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-46'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-46'].generateMesh()
mdb.models['Model-1'].parts['Part-47'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-47'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-47'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-47'].generateMesh()
mdb.models['Model-1'].parts['Part-48'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-48'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-48'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-48'].generateMesh()
mdb.models['Model-1'].parts['Part-49'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-49'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-49'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-49'].generateMesh()
mdb.models['Model-1'].parts['Part-50'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-50'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-50'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-50'].generateMesh()
mdb.models['Model-1'].parts['Part-51'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-51'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-51'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-51'].generateMesh()
mdb.models['Model-1'].parts['Part-52'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-52'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-52'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-52'].generateMesh()
mdb.models['Model-1'].parts['Part-53'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-53'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-53'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-53'].generateMesh()
mdb.models['Model-1'].parts['Part-54'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-54'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-54'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-54'].generateMesh()
mdb.models['Model-1'].parts['Part-55'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-55'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-55'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-55'].generateMesh()
mdb.models['Model-1'].parts['Part-56'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-56'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-56'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-56'].generateMesh()
mdb.models['Model-1'].parts['Part-57'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-57'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-57'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-57'].generateMesh()
mdb.models['Model-1'].parts['Part-58'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-58'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-58'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-58'].generateMesh()
mdb.models['Model-1'].parts['Part-59'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-59'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-59'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-59'].generateMesh()
mdb.models['Model-1'].parts['Part-60'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-60'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-60'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-60'].generateMesh()
mdb.models['Model-1'].parts['Part-61'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-61'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-61'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-61'].generateMesh()
mdb.models['Model-1'].parts['Part-62'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-62'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-62'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-62'].generateMesh()
mdb.models['Model-1'].parts['Part-63'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-63'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-63'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-63'].generateMesh()
mdb.models['Model-1'].parts['Part-64'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-64'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-64'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-64'].generateMesh()
mdb.models['Model-1'].parts['Part-65'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-65'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-65'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-65'].generateMesh()
mdb.models['Model-1'].parts['Part-66'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-66'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-66'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-66'].generateMesh()
mdb.models['Model-1'].parts['Part-67'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-67'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-67'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-67'].generateMesh()
mdb.models['Model-1'].parts['Part-68'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-68'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-68'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-68'].generateMesh()
mdb.models['Model-1'].parts['Part-69'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-69'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-69'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-69'].generateMesh()
mdb.models['Model-1'].parts['Part-70'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-70'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-70'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-70'].generateMesh()
mdb.models['Model-1'].parts['Part-71'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-71'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-71'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-71'].generateMesh()
mdb.models['Model-1'].parts['Part-72'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-72'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-72'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-72'].generateMesh()
mdb.models['Model-1'].parts['Part-73'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-73'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-73'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-73'].generateMesh()
mdb.models['Model-1'].parts['Part-74'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-74'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-74'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-74'].generateMesh()
mdb.models['Model-1'].parts['Part-75'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-75'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-75'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-75'].generateMesh()
mdb.models['Model-1'].parts['Part-76'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-76'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-76'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-76'].generateMesh()
mdb.models['Model-1'].parts['Part-77'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-77'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-77'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-77'].generateMesh()
mdb.models['Model-1'].parts['Part-78'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-78'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-78'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-78'].generateMesh()
mdb.models['Model-1'].parts['Part-79'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-79'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-79'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-79'].generateMesh()
mdb.models['Model-1'].parts['Part-80'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-80'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-80'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-80'].generateMesh()
mdb.models['Model-1'].parts['Part-81'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-81'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-81'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-81'].generateMesh()
mdb.models['Model-1'].parts['Part-82'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-82'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-82'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-82'].generateMesh()
mdb.models['Model-1'].parts['Part-83'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-83'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-83'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-83'].generateMesh()
mdb.models['Model-1'].parts['Part-84'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-84'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-84'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-84'].generateMesh()
mdb.models['Model-1'].parts['Part-85'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-85'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-85'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-85'].generateMesh()
mdb.models['Model-1'].parts['Part-86'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-86'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-86'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-86'].generateMesh()
mdb.models['Model-1'].parts['Part-87'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-87'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-87'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-87'].generateMesh()
mdb.models['Model-1'].parts['Part-88'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-88'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-88'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-88'].generateMesh()
mdb.models['Model-1'].parts['Part-89'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-89'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-89'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-89'].generateMesh()
mdb.models['Model-1'].parts['Part-90'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-90'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-90'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-90'].generateMesh()
mdb.models['Model-1'].parts['Part-91'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-91'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-91'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-91'].generateMesh()
mdb.models['Model-1'].parts['Part-92'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-92'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-92'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-92'].generateMesh()
mdb.models['Model-1'].parts['Part-93'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-93'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-93'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-93'].generateMesh()
mdb.models['Model-1'].parts['Part-94'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-94'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-94'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-94'].generateMesh()
mdb.models['Model-1'].parts['Part-95'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-95'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-95'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-95'].generateMesh()
mdb.models['Model-1'].parts['Part-96'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-96'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-96'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-96'].generateMesh()
mdb.models['Model-1'].parts['Part-97'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-97'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-97'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-97'].generateMesh()
mdb.models['Model-1'].parts['Part-98'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-98'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-98'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-98'].generateMesh()
mdb.models['Model-1'].parts['Part-99'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-99'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-99'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-99'].generateMesh()
mdb.models['Model-1'].parts['Part-100'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-100'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-100'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-100'].generateMesh()
mdb.models['Model-1'].parts['Part-101'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-101'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-101'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-101'].generateMesh()
mdb.models['Model-1'].parts['Part-102'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-102'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-102'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-102'].generateMesh()
mdb.models['Model-1'].parts['Part-103'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-103'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-103'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-103'].generateMesh()
mdb.models['Model-1'].parts['Part-104'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-104'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-104'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-104'].generateMesh()
mdb.models['Model-1'].parts['Part-105'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-105'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-105'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-105'].generateMesh()
mdb.models['Model-1'].parts['Part-106'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-106'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-106'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-106'].generateMesh()
mdb.models['Model-1'].parts['Part-107'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-107'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-107'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-107'].generateMesh()
mdb.models['Model-1'].parts['Part-108'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-108'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-108'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-108'].generateMesh()
mdb.models['Model-1'].parts['Part-109'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-109'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-109'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-109'].generateMesh()
mdb.models['Model-1'].parts['Part-110'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-110'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-110'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-110'].generateMesh()
mdb.models['Model-1'].parts['Part-111'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-111'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-111'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-111'].generateMesh()
mdb.models['Model-1'].parts['Part-112'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-112'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-112'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-112'].generateMesh()
mdb.models['Model-1'].parts['Part-113'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-113'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-113'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-113'].generateMesh()
mdb.models['Model-1'].parts['Part-114'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-114'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-114'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-114'].generateMesh()
mdb.models['Model-1'].parts['Part-115'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-115'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-115'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-115'].generateMesh()
mdb.models['Model-1'].parts['Part-116'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-116'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-116'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-116'].generateMesh()
mdb.models['Model-1'].parts['Part-117'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-117'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-117'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-117'].generateMesh()
mdb.models['Model-1'].parts['Part-118'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-118'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-118'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-118'].generateMesh()
mdb.models['Model-1'].parts['Part-119'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-119'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-119'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-119'].generateMesh()
mdb.models['Model-1'].parts['Part-120'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-120'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-120'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-120'].generateMesh()
mdb.models['Model-1'].parts['Part-121'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-121'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-121'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-121'].generateMesh()
mdb.models['Model-1'].parts['Part-122'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-122'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-122'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-122'].generateMesh()
mdb.models['Model-1'].parts['Part-123'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-123'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-123'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-123'].generateMesh()
mdb.models['Model-1'].parts['Part-124'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-124'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-124'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-124'].generateMesh()
mdb.models['Model-1'].parts['Part-125'].setMeshControls(elemShape=TRI, regions=
    mdb.models['Model-1'].parts['Part-125'].faces.getSequenceFromMask(('[#1 ]', 
    ), ))
mdb.models['Model-1'].parts['Part-125'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=14.0)
mdb.models['Model-1'].parts['Part-125'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, scratch='', type=ANALYSIS, 
    userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'tbszjwa', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-00-ASSEMBLY_M_SURF-MAINPART0), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-11-ASSEMBLY_M_SURF-MAINPART1), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-22-ASSEMBLY_M_SURF-MAINPART2), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-33-ASSEMBLY_M_SURF-MAINPART3), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-44-ASSEMBLY_M_SURF-MAINPART4), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-55-ASSEMBLY_M_SURF-MAINPART5), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-66-ASSEMBLY_M_SURF-MAINPART6), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-77-ASSEMBLY_M_SURF-MAINPART7), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-88-ASSEMBLY_M_SURF-MAINPART8), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-99-ASSEMBLY_M_SURF-MAINPART9), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-1010-ASSEMBLY_M_SURF-MAINPART10), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-1111-ASSEMBLY_M_SURF-MAINPART11), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-1212-ASSEMBLY_M_SURF-MAINPART12), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-1313-ASSEMBLY_M_SURF-MAINPART13), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-1414-ASSEMBLY_M_SURF-MAINPART14), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-1515-ASSEMBLY_M_SURF-MAINPART15), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-1616-ASSEMBLY_M_SURF-MAINPART16), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-1717-ASSEMBLY_M_SURF-MAINPART17), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-1818-ASSEMBLY_M_SURF-MAINPART18), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-1919-ASSEMBLY_M_SURF-MAINPART19), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-2020-ASSEMBLY_M_SURF-MAINPART20), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-2121-ASSEMBLY_M_SURF-MAINPART21), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-2222-ASSEMBLY_M_SURF-MAINPART22), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-2323-ASSEMBLY_M_SURF-MAINPART23), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-2424-ASSEMBLY_M_SURF-MAINPART24), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-2525-ASSEMBLY_M_SURF-MAINPART25), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-2626-ASSEMBLY_M_SURF-MAINPART26), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-2727-ASSEMBLY_M_SURF-MAINPART27), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-2828-ASSEMBLY_M_SURF-MAINPART28), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-2929-ASSEMBLY_M_SURF-MAINPART29), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-3030-ASSEMBLY_M_SURF-MAINPART30), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-3131-ASSEMBLY_M_SURF-MAINPART31), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-3232-ASSEMBLY_M_SURF-MAINPART32), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-3333-ASSEMBLY_M_SURF-MAINPART33), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-3434-ASSEMBLY_M_SURF-MAINPART34), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-3535-ASSEMBLY_M_SURF-MAINPART35), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-3636-ASSEMBLY_M_SURF-MAINPART36), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-3737-ASSEMBLY_M_SURF-MAINPART37), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-3838-ASSEMBLY_M_SURF-MAINPART38), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-3939-ASSEMBLY_M_SURF-MAINPART39), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-4040-ASSEMBLY_M_SURF-MAINPART40), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-4141-ASSEMBLY_M_SURF-MAINPART41), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-4242-ASSEMBLY_M_SURF-MAINPART42), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-4343-ASSEMBLY_M_SURF-MAINPART43), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-4444-ASSEMBLY_M_SURF-MAINPART44), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-4545-ASSEMBLY_M_SURF-MAINPART45), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-4646-ASSEMBLY_M_SURF-MAINPART46), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-4747-ASSEMBLY_M_SURF-MAINPART47), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-4848-ASSEMBLY_M_SURF-MAINPART48), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-4949-ASSEMBLY_M_SURF-MAINPART49), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-5050-ASSEMBLY_M_SURF-MAINPART50), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-5151-ASSEMBLY_M_SURF-MAINPART51), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-5252-ASSEMBLY_M_SURF-MAINPART52), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-5353-ASSEMBLY_M_SURF-MAINPART53), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-5454-ASSEMBLY_M_SURF-MAINPART54), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-5555-ASSEMBLY_M_SURF-MAINPART55), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-5656-ASSEMBLY_M_SURF-MAINPART56), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-5757-ASSEMBLY_M_SURF-MAINPART57), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-5858-ASSEMBLY_M_SURF-MAINPART58), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-5959-ASSEMBLY_M_SURF-MAINPART59), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-6060-ASSEMBLY_M_SURF-MAINPART60), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-6161-ASSEMBLY_M_SURF-MAINPART61), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-6262-ASSEMBLY_M_SURF-MAINPART62), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-6363-ASSEMBLY_M_SURF-MAINPART63), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-6464-ASSEMBLY_M_SURF-MAINPART64), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-6565-ASSEMBLY_M_SURF-MAINPART65), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-6666-ASSEMBLY_M_SURF-MAINPART66), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-6767-ASSEMBLY_M_SURF-MAINPART67), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-6868-ASSEMBLY_M_SURF-MAINPART68), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-6969-ASSEMBLY_M_SURF-MAINPART69), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-7070-ASSEMBLY_M_SURF-MAINPART70), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-7171-ASSEMBLY_M_SURF-MAINPART71), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-7272-ASSEMBLY_M_SURF-MAINPART72), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-7373-ASSEMBLY_M_SURF-MAINPART73), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-7474-ASSEMBLY_M_SURF-MAINPART74), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-7575-ASSEMBLY_M_SURF-MAINPART75), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-7676-ASSEMBLY_M_SURF-MAINPART76), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-7777-ASSEMBLY_M_SURF-MAINPART77), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-7878-ASSEMBLY_M_SURF-MAINPART78), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-7979-ASSEMBLY_M_SURF-MAINPART79), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-8080-ASSEMBLY_M_SURF-MAINPART80), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-8181-ASSEMBLY_M_SURF-MAINPART81), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-8282-ASSEMBLY_M_SURF-MAINPART82), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-8383-ASSEMBLY_M_SURF-MAINPART83), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-8484-ASSEMBLY_M_SURF-MAINPART84), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-8585-ASSEMBLY_M_SURF-MAINPART85), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-8686-ASSEMBLY_M_SURF-MAINPART86), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-8787-ASSEMBLY_M_SURF-MAINPART87), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-8888-ASSEMBLY_M_SURF-MAINPART88), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-8989-ASSEMBLY_M_SURF-MAINPART89), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-9090-ASSEMBLY_M_SURF-MAINPART90), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-9191-ASSEMBLY_M_SURF-MAINPART91), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-9292-ASSEMBLY_M_SURF-MAINPART92), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-9393-ASSEMBLY_M_SURF-MAINPART93), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-9494-ASSEMBLY_M_SURF-MAINPART94), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-9595-ASSEMBLY_M_SURF-MAINPART95), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-9696-ASSEMBLY_M_SURF-MAINPART96), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-9797-ASSEMBLY_M_SURF-MAINPART97), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-9898-ASSEMBLY_M_SURF-MAINPART98), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-9999-ASSEMBLY_M_SURF-MAINPART99), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-100100-ASSEMBLY_M_SURF-MAINPART100), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-101101-ASSEMBLY_M_SURF-MAINPART101), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-102102-ASSEMBLY_M_SURF-MAINPART102), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-103103-ASSEMBLY_M_SURF-MAINPART103), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-104104-ASSEMBLY_M_SURF-MAINPART104), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-105105-ASSEMBLY_M_SURF-MAINPART105), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-106106-ASSEMBLY_M_SURF-MAINPART106), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-107107-ASSEMBLY_M_SURF-MAINPART107), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-108108-ASSEMBLY_M_SURF-MAINPART108), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-109109-ASSEMBLY_M_SURF-MAINPART109), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-110110-ASSEMBLY_M_SURF-MAINPART110), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-111111-ASSEMBLY_M_SURF-MAINPART111), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-112112-ASSEMBLY_M_SURF-MAINPART112), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-113113-ASSEMBLY_M_SURF-MAINPART113), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-114114-ASSEMBLY_M_SURF-MAINPART114), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-115115-ASSEMBLY_M_SURF-MAINPART115), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-116116-ASSEMBLY_M_SURF-MAINPART116), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-117117-ASSEMBLY_M_SURF-MAINPART117), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-118118-ASSEMBLY_M_SURF-MAINPART118), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-119119-ASSEMBLY_M_SURF-MAINPART119), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-120120-ASSEMBLY_M_SURF-MAINPART120), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-121121-ASSEMBLY_M_SURF-MAINPART121), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-122122-ASSEMBLY_M_SURF-MAINPART122), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-123123-ASSEMBLY_M_SURF-MAINPART123), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-124124-ASSEMBLY_M_SURF-MAINPART124), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR *TIE PAIR (ASSEMBLY_S_SURF-PART-125125-ASSEMBLY_M_SURF-MAINPART125), ADJUSTED NODES WITH VERY SMALL ADJUSTMENTS WERE NOT PRINTED. SPECIFY *PREPRINT,MODEL=YES FOR COMPLETE PRINTOUT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '52 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'F:\\Github\\2D-RandomParticle-Model\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'tbszjwa', 'handle': 6468, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': 0, 
    'timeIncrement': 1.0, 'increment': 0, 'stepTime': 0.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 0, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 26.9082107543945})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Tue Jul 09 21:30:39 2019', 
    'jobName': 'Job-1'})
